# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/',
                'doc_host': 'https://timeseriesAI.github.io/tsai',
                'git_url': 'https://github.com/timeseriesAI/tsai/',
                'lib_path': 'tsai'},
  'syms': { 'tsai.all': {},
            'tsai.analysis': { 'tsai.analysis.Learner.feature_importance': ('analysis.html#learner.feature_importance', 'tsai/analysis.py'),
                               'tsai.analysis.Learner.plot_confusion_matrix': ( 'analysis.html#learner.plot_confusion_matrix',
                                                                                'tsai/analysis.py'),
                               'tsai.analysis.Learner.plot_top_losses': ('analysis.html#learner.plot_top_losses', 'tsai/analysis.py'),
                               'tsai.analysis.Learner.show_probas': ('analysis.html#learner.show_probas', 'tsai/analysis.py'),
                               'tsai.analysis.Learner.step_importance': ('analysis.html#learner.step_importance', 'tsai/analysis.py'),
                               'tsai.analysis.Learner.top_losses': ('analysis.html#learner.top_losses', 'tsai/analysis.py')},
            'tsai.basics': {},
            'tsai.calibration': { 'tsai.calibration.ECELoss': ('calibration.html#eceloss', 'tsai/calibration.py'),
                                  'tsai.calibration.ECELoss.__init__': ('calibration.html#eceloss.__init__', 'tsai/calibration.py'),
                                  'tsai.calibration.ECELoss.forward': ('calibration.html#eceloss.forward', 'tsai/calibration.py'),
                                  'tsai.calibration.Learner.calibrate_model': ( 'calibration.html#learner.calibrate_model',
                                                                                'tsai/calibration.py'),
                                  'tsai.calibration.ModelWithTemperature': ('calibration.html#modelwithtemperature', 'tsai/calibration.py'),
                                  'tsai.calibration.ModelWithTemperature.__init__': ( 'calibration.html#modelwithtemperature.__init__',
                                                                                      'tsai/calibration.py'),
                                  'tsai.calibration.ModelWithTemperature.forward': ( 'calibration.html#modelwithtemperature.forward',
                                                                                     'tsai/calibration.py'),
                                  'tsai.calibration.ModelWithTemperature.temperature_scale': ( 'calibration.html#modelwithtemperature.temperature_scale',
                                                                                               'tsai/calibration.py'),
                                  'tsai.calibration.TemperatureSetter': ('calibration.html#temperaturesetter', 'tsai/calibration.py'),
                                  'tsai.calibration.TemperatureSetter.__init__': ( 'calibration.html#temperaturesetter.__init__',
                                                                                   'tsai/calibration.py'),
                                  'tsai.calibration.TemperatureSetter.forward': ( 'calibration.html#temperaturesetter.forward',
                                                                                  'tsai/calibration.py'),
                                  'tsai.calibration.plot_calibration_curve': ( 'calibration.html#plot_calibration_curve',
                                                                               'tsai/calibration.py')},
            'tsai.callback.MVP': { 'tsai.callback.MVP.MVP': ('callback.mvp.html#mvp', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.MVP.__init__': ('callback.mvp.html#mvp.__init__', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.MVP._loss': ('callback.mvp.html#mvp._loss', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.MVP.after_epoch': ('callback.mvp.html#mvp.after_epoch', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.MVP.after_fit': ('callback.mvp.html#mvp.after_fit', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.MVP.before_batch': ('callback.mvp.html#mvp.before_batch', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.MVP.before_fit': ('callback.mvp.html#mvp.before_fit', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.MVP.show_preds': ('callback.mvp.html#mvp.show_preds', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.create_future_mask': ('callback.mvp.html#create_future_mask', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.create_mask': ('callback.mvp.html#create_mask', 'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.create_subsequence_mask': ( 'callback.mvp.html#create_subsequence_mask',
                                                                                  'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.create_variable_mask': ( 'callback.mvp.html#create_variable_mask',
                                                                               'tsai/callback/MVP.py'),
                                   'tsai.callback.MVP.self_mask': ('callback.mvp.html#self_mask', 'tsai/callback/MVP.py')},
            'tsai.callback.PredictionDynamics': { 'tsai.callback.PredictionDynamics.PredictionDynamics': ( 'callback.predictiondynamics.html#predictiondynamics',
                                                                                                           'tsai/callback/PredictionDynamics.py'),
                                                  'tsai.callback.PredictionDynamics.PredictionDynamics.__init__': ( 'callback.predictiondynamics.html#predictiondynamics.__init__',
                                                                                                                    'tsai/callback/PredictionDynamics.py'),
                                                  'tsai.callback.PredictionDynamics.PredictionDynamics.after_epoch': ( 'callback.predictiondynamics.html#predictiondynamics.after_epoch',
                                                                                                                       'tsai/callback/PredictionDynamics.py'),
                                                  'tsai.callback.PredictionDynamics.PredictionDynamics.after_pred': ( 'callback.predictiondynamics.html#predictiondynamics.after_pred',
                                                                                                                      'tsai/callback/PredictionDynamics.py'),
                                                  'tsai.callback.PredictionDynamics.PredictionDynamics.before_epoch': ( 'callback.predictiondynamics.html#predictiondynamics.before_epoch',
                                                                                                                        'tsai/callback/PredictionDynamics.py'),
                                                  'tsai.callback.PredictionDynamics.PredictionDynamics.before_fit': ( 'callback.predictiondynamics.html#predictiondynamics.before_fit',
                                                                                                                      'tsai/callback/PredictionDynamics.py'),
                                                  'tsai.callback.PredictionDynamics.PredictionDynamics.update_graph': ( 'callback.predictiondynamics.html#predictiondynamics.update_graph',
                                                                                                                        'tsai/callback/PredictionDynamics.py')},
            'tsai.callback.all': {},
            'tsai.callback.core': { 'tsai.callback.core.BatchSubsampler': ('callback.core.html#batchsubsampler', 'tsai/callback/core.py'),
                                    'tsai.callback.core.BatchSubsampler.__init__': ( 'callback.core.html#batchsubsampler.__init__',
                                                                                     'tsai/callback/core.py'),
                                    'tsai.callback.core.BatchSubsampler.before_batch': ( 'callback.core.html#batchsubsampler.before_batch',
                                                                                         'tsai/callback/core.py'),
                                    'tsai.callback.core.BatchSubsampler.before_fit': ( 'callback.core.html#batchsubsampler.before_fit',
                                                                                       'tsai/callback/core.py'),
                                    'tsai.callback.core.SaveModel': ('callback.core.html#savemodel', 'tsai/callback/core.py'),
                                    'tsai.callback.core.SaveModel.__init__': ( 'callback.core.html#savemodel.__init__',
                                                                               'tsai/callback/core.py'),
                                    'tsai.callback.core.SaveModel._save': ('callback.core.html#savemodel._save', 'tsai/callback/core.py'),
                                    'tsai.callback.core.SaveModel.after_epoch': ( 'callback.core.html#savemodel.after_epoch',
                                                                                  'tsai/callback/core.py'),
                                    'tsai.callback.core.SaveModel.after_fit': ( 'callback.core.html#savemodel.after_fit',
                                                                                'tsai/callback/core.py'),
                                    'tsai.callback.core.ShowGraph': ('callback.core.html#showgraph', 'tsai/callback/core.py'),
                                    'tsai.callback.core.ShowGraph.__init__': ( 'callback.core.html#showgraph.__init__',
                                                                               'tsai/callback/core.py'),
                                    'tsai.callback.core.ShowGraph.after_epoch': ( 'callback.core.html#showgraph.after_epoch',
                                                                                  'tsai/callback/core.py'),
                                    'tsai.callback.core.ShowGraph.after_fit': ( 'callback.core.html#showgraph.after_fit',
                                                                                'tsai/callback/core.py'),
                                    'tsai.callback.core.ShowGraph.after_train': ( 'callback.core.html#showgraph.after_train',
                                                                                  'tsai/callback/core.py'),
                                    'tsai.callback.core.ShowGraph.before_fit': ( 'callback.core.html#showgraph.before_fit',
                                                                                 'tsai/callback/core.py'),
                                    'tsai.callback.core.ShowGraph.update_graph': ( 'callback.core.html#showgraph.update_graph',
                                                                                   'tsai/callback/core.py'),
                                    'tsai.callback.core.TransformScheduler': ( 'callback.core.html#transformscheduler',
                                                                               'tsai/callback/core.py'),
                                    'tsai.callback.core.TransformScheduler.__init__': ( 'callback.core.html#transformscheduler.__init__',
                                                                                        'tsai/callback/core.py'),
                                    'tsai.callback.core.TransformScheduler.__repr__': ( 'callback.core.html#transformscheduler.__repr__',
                                                                                        'tsai/callback/core.py'),
                                    'tsai.callback.core.TransformScheduler.after_batch': ( 'callback.core.html#transformscheduler.after_batch',
                                                                                           'tsai/callback/core.py'),
                                    'tsai.callback.core.TransformScheduler.after_fit': ( 'callback.core.html#transformscheduler.after_fit',
                                                                                         'tsai/callback/core.py'),
                                    'tsai.callback.core.TransformScheduler.before_fit': ( 'callback.core.html#transformscheduler.before_fit',
                                                                                          'tsai/callback/core.py'),
                                    'tsai.callback.core.WeightedPerSampleLoss': ( 'callback.core.html#weightedpersampleloss',
                                                                                  'tsai/callback/core.py'),
                                    'tsai.callback.core.WeightedPerSampleLoss.__init__': ( 'callback.core.html#weightedpersampleloss.__init__',
                                                                                           'tsai/callback/core.py'),
                                    'tsai.callback.core.WeightedPerSampleLoss.after_fit': ( 'callback.core.html#weightedpersampleloss.after_fit',
                                                                                            'tsai/callback/core.py'),
                                    'tsai.callback.core.WeightedPerSampleLoss.before_batch': ( 'callback.core.html#weightedpersampleloss.before_batch',
                                                                                               'tsai/callback/core.py'),
                                    'tsai.callback.core.WeightedPerSampleLoss.before_fit': ( 'callback.core.html#weightedpersampleloss.before_fit',
                                                                                             'tsai/callback/core.py'),
                                    'tsai.callback.core._PerInstanceLoss': ('callback.core.html#_perinstanceloss', 'tsai/callback/core.py'),
                                    'tsai.callback.core._PerInstanceLoss.__init__': ( 'callback.core.html#_perinstanceloss.__init__',
                                                                                      'tsai/callback/core.py'),
                                    'tsai.callback.core._PerInstanceLoss.forward': ( 'callback.core.html#_perinstanceloss.forward',
                                                                                     'tsai/callback/core.py'),
                                    'tsai.callback.core.get_lds_kernel_window': ( 'callback.core.html#get_lds_kernel_window',
                                                                                  'tsai/callback/core.py'),
                                    'tsai.callback.core.prepare_LDS_weights': ( 'callback.core.html#prepare_lds_weights',
                                                                                'tsai/callback/core.py')},
            'tsai.callback.experimental': { 'tsai.callback.experimental.BatchLossFilter': ( 'callback.experimental.html#batchlossfilter',
                                                                                            'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.BatchLossFilter.__init__': ( 'callback.experimental.html#batchlossfilter.__init__',
                                                                                                     'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.BatchLossFilter.after_fit': ( 'callback.experimental.html#batchlossfilter.after_fit',
                                                                                                      'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.BatchLossFilter.before_batch': ( 'callback.experimental.html#batchlossfilter.before_batch',
                                                                                                         'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.BatchLossFilter.before_fit': ( 'callback.experimental.html#batchlossfilter.before_fit',
                                                                                                       'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.BatchMasker': ( 'callback.experimental.html#batchmasker',
                                                                                        'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.BatchMasker.__init__': ( 'callback.experimental.html#batchmasker.__init__',
                                                                                                 'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.BatchMasker.before_batch': ( 'callback.experimental.html#batchmasker.before_batch',
                                                                                                     'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.BatchMasker.before_fit': ( 'callback.experimental.html#batchmasker.before_fit',
                                                                                                   'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.GamblersCallback': ( 'callback.experimental.html#gamblerscallback',
                                                                                             'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.GamblersCallback.after_loss': ( 'callback.experimental.html#gamblerscallback.after_loss',
                                                                                                        'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.RandomWeightLossWrapper': ( 'callback.experimental.html#randomweightlosswrapper',
                                                                                                    'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.RandomWeightLossWrapper._random_weight_loss': ( 'callback.experimental.html#randomweightlosswrapper._random_weight_loss',
                                                                                                                        'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.RandomWeightLossWrapper.after_fit': ( 'callback.experimental.html#randomweightlosswrapper.after_fit',
                                                                                                              'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.RandomWeightLossWrapper.before_fit': ( 'callback.experimental.html#randomweightlosswrapper.before_fit',
                                                                                                               'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.SamplerWithReplacement': ( 'callback.experimental.html#samplerwithreplacement',
                                                                                                   'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.SamplerWithReplacement._get_idxs': ( 'callback.experimental.html#samplerwithreplacement._get_idxs',
                                                                                                             'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.SamplerWithReplacement.after_fit': ( 'callback.experimental.html#samplerwithreplacement.after_fit',
                                                                                                             'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.SamplerWithReplacement.before_fit': ( 'callback.experimental.html#samplerwithreplacement.before_fit',
                                                                                                              'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.UBDAug': ( 'callback.experimental.html#ubdaug',
                                                                                   'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.UBDAug.__init__': ( 'callback.experimental.html#ubdaug.__init__',
                                                                                            'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.UBDAug.__repr__': ( 'callback.experimental.html#ubdaug.__repr__',
                                                                                            'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.UBDAug.before_batch': ( 'callback.experimental.html#ubdaug.before_batch',
                                                                                                'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.UBDAug.before_fit': ( 'callback.experimental.html#ubdaug.before_fit',
                                                                                              'tsai/callback/experimental.py'),
                                            'tsai.callback.experimental.gambler_loss': ( 'callback.experimental.html#gambler_loss',
                                                                                         'tsai/callback/experimental.py')},
            'tsai.callback.noisy_student': { 'tsai.callback.noisy_student.NoisyStudent': ( 'callback.noisy_student.html#noisystudent',
                                                                                           'tsai/callback/noisy_student.py'),
                                             'tsai.callback.noisy_student.NoisyStudent.__init__': ( 'callback.noisy_student.html#noisystudent.__init__',
                                                                                                    'tsai/callback/noisy_student.py'),
                                             'tsai.callback.noisy_student.NoisyStudent.after_fit': ( 'callback.noisy_student.html#noisystudent.after_fit',
                                                                                                     'tsai/callback/noisy_student.py'),
                                             'tsai.callback.noisy_student.NoisyStudent.before_batch': ( 'callback.noisy_student.html#noisystudent.before_batch',
                                                                                                        'tsai/callback/noisy_student.py'),
                                             'tsai.callback.noisy_student.NoisyStudent.before_fit': ( 'callback.noisy_student.html#noisystudent.before_fit',
                                                                                                      'tsai/callback/noisy_student.py'),
                                             'tsai.callback.noisy_student.NoisyStudent.loss': ( 'callback.noisy_student.html#noisystudent.loss',
                                                                                                'tsai/callback/noisy_student.py')},
            'tsai.data.all': {},
            'tsai.data.basics': {},
            'tsai.data.core': { 'tsai.data.core.NoTfmLists': ('data.core.html#notfmlists', 'tsai/data/core.py'),
                                'tsai.data.core.NoTfmLists.__getitem__': ('data.core.html#notfmlists.__getitem__', 'tsai/data/core.py'),
                                'tsai.data.core.NoTfmLists.__init__': ('data.core.html#notfmlists.__init__', 'tsai/data/core.py'),
                                'tsai.data.core.NoTfmLists.__len__': ('data.core.html#notfmlists.__len__', 'tsai/data/core.py'),
                                'tsai.data.core.NoTfmLists.__repr__': ('data.core.html#notfmlists.__repr__', 'tsai/data/core.py'),
                                'tsai.data.core.NoTfmLists._new': ('data.core.html#notfmlists._new', 'tsai/data/core.py'),
                                'tsai.data.core.NoTfmLists.decode': ('data.core.html#notfmlists.decode', 'tsai/data/core.py'),
                                'tsai.data.core.NoTfmLists.new_empty': ('data.core.html#notfmlists.new_empty', 'tsai/data/core.py'),
                                'tsai.data.core.NoTfmLists.subset': ('data.core.html#notfmlists.subset', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader': ('data.core.html#numpydataloader', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.__init__': ('data.core.html#numpydataloader.__init__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.__len__': ('data.core.html#numpydataloader.__len__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.c': ('data.core.html#numpydataloader.c', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.cat': ('data.core.html#numpydataloader.cat', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.class_priors': ( 'data.core.html#numpydataloader.class_priors',
                                                                                 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.create_batch': ( 'data.core.html#numpydataloader.create_batch',
                                                                                 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.create_item': ( 'data.core.html#numpydataloader.create_item',
                                                                                'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.cws': ('data.core.html#numpydataloader.cws', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.d': ('data.core.html#numpydataloader.d', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.get_idxs': ('data.core.html#numpydataloader.get_idxs', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.new_dl': ('data.core.html#numpydataloader.new_dl', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.show_batch': ( 'data.core.html#numpydataloader.show_batch',
                                                                               'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.show_dist': ( 'data.core.html#numpydataloader.show_dist',
                                                                              'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.show_results': ( 'data.core.html#numpydataloader.show_results',
                                                                                 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.shuffle_fn': ( 'data.core.html#numpydataloader.shuffle_fn',
                                                                               'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoader.unique_batch': ( 'data.core.html#numpydataloader.unique_batch',
                                                                                 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoaders': ('data.core.html#numpydataloaders', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoaders.__init__': ( 'data.core.html#numpydataloaders.__init__',
                                                                              'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoaders.decode': ('data.core.html#numpydataloaders.decode', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoaders.decoder': ('data.core.html#numpydataloaders.decoder', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoaders.from_dsets': ( 'data.core.html#numpydataloaders.from_dsets',
                                                                                'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoaders.from_numpy': ( 'data.core.html#numpydataloaders.from_numpy',
                                                                                'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoaders.new_dl': ('data.core.html#numpydataloaders.new_dl', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataLoaders.show_dist': ( 'data.core.html#numpydataloaders.show_dist',
                                                                               'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataset': ('data.core.html#numpydataset', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataset.__getitem__': ('data.core.html#numpydataset.__getitem__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataset.__init__': ('data.core.html#numpydataset.__init__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDataset.__len__': ('data.core.html#numpydataset.__len__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets': ('data.core.html#numpydatasets', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.__getitem__': ( 'data.core.html#numpydatasets.__getitem__',
                                                                              'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.__init__': ('data.core.html#numpydatasets.__init__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.__len__': ('data.core.html#numpydatasets.__len__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.__repr__': ('data.core.html#numpydatasets.__repr__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets._new': ('data.core.html#numpydatasets._new', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.add_dataset': ( 'data.core.html#numpydatasets.add_dataset',
                                                                              'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.add_test': ('data.core.html#numpydatasets.add_test', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.add_unlabeled': ( 'data.core.html#numpydatasets.add_unlabeled',
                                                                                'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.new_empty': ('data.core.html#numpydatasets.new_empty', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.show_at': ('data.core.html#numpydatasets.show_at', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyDatasets.subset': ('data.core.html#numpydatasets.subset', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyTensor': ('data.core.html#numpytensor', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyTensor.__new__': ('data.core.html#numpytensor.__new__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyTensor.__repr__': ('data.core.html#numpytensor.__repr__', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyTensor.data': ('data.core.html#numpytensor.data', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyTensor.show': ('data.core.html#numpytensor.show', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyTensorBlock': ('data.core.html#numpytensorblock', 'tsai/data/core.py'),
                                'tsai.data.core.NumpyTensorBlock.__init__': ( 'data.core.html#numpytensorblock.__init__',
                                                                              'tsai/data/core.py'),
                                'tsai.data.core.StratifiedSampler': ('data.core.html#stratifiedsampler', 'tsai/data/core.py'),
                                'tsai.data.core.StratifiedSampler.__init__': ( 'data.core.html#stratifiedsampler.__init__',
                                                                               'tsai/data/core.py'),
                                'tsai.data.core.StratifiedSampler.__iter__': ( 'data.core.html#stratifiedsampler.__iter__',
                                                                               'tsai/data/core.py'),
                                'tsai.data.core.StratifiedSampler.__len__': ( 'data.core.html#stratifiedsampler.__len__',
                                                                              'tsai/data/core.py'),
                                'tsai.data.core.TSClassification': ('data.core.html#tsclassification', 'tsai/data/core.py'),
                                'tsai.data.core.TSClassification.__init__': ( 'data.core.html#tsclassification.__init__',
                                                                              'tsai/data/core.py'),
                                'tsai.data.core.TSClassification.decodes': ('data.core.html#tsclassification.decodes', 'tsai/data/core.py'),
                                'tsai.data.core.TSClassification.encodes': ('data.core.html#tsclassification.encodes', 'tsai/data/core.py'),
                                'tsai.data.core.TSClassification.setups': ('data.core.html#tsclassification.setups', 'tsai/data/core.py'),
                                'tsai.data.core.TSDataLoader': ('data.core.html#tsdataloader', 'tsai/data/core.py'),
                                'tsai.data.core.TSDataLoader.len': ('data.core.html#tsdataloader.len', 'tsai/data/core.py'),
                                'tsai.data.core.TSDataLoader.vars': ('data.core.html#tsdataloader.vars', 'tsai/data/core.py'),
                                'tsai.data.core.TSDataLoaders': ('data.core.html#tsdataloaders', 'tsai/data/core.py'),
                                'tsai.data.core.TSDataset': ('data.core.html#tsdataset', 'tsai/data/core.py'),
                                'tsai.data.core.TSDataset.__getitem__': ('data.core.html#tsdataset.__getitem__', 'tsai/data/core.py'),
                                'tsai.data.core.TSDataset.__init__': ('data.core.html#tsdataset.__init__', 'tsai/data/core.py'),
                                'tsai.data.core.TSDataset.__len__': ('data.core.html#tsdataset.__len__', 'tsai/data/core.py'),
                                'tsai.data.core.TSDatasets': ('data.core.html#tsdatasets', 'tsai/data/core.py'),
                                'tsai.data.core.TSDatasets.__getitem__': ('data.core.html#tsdatasets.__getitem__', 'tsai/data/core.py'),
                                'tsai.data.core.TSDatasets.__init__': ('data.core.html#tsdatasets.__init__', 'tsai/data/core.py'),
                                'tsai.data.core.TSDatasets._new': ('data.core.html#tsdatasets._new', 'tsai/data/core.py'),
                                'tsai.data.core.TSDatasets.new_empty': ('data.core.html#tsdatasets.new_empty', 'tsai/data/core.py'),
                                'tsai.data.core.TSDatasets.subset': ('data.core.html#tsdatasets.subset', 'tsai/data/core.py'),
                                'tsai.data.core.TSLabelTensor': ('data.core.html#tslabeltensor', 'tsai/data/core.py'),
                                'tsai.data.core.TSLabelTensor.__repr__': ('data.core.html#tslabeltensor.__repr__', 'tsai/data/core.py'),
                                'tsai.data.core.TSMaskTensor': ('data.core.html#tsmasktensor', 'tsai/data/core.py'),
                                'tsai.data.core.TSMaskTensor.__repr__': ('data.core.html#tsmasktensor.__repr__', 'tsai/data/core.py'),
                                'tsai.data.core.TSMultiLabelClassification': ( 'data.core.html#tsmultilabelclassification',
                                                                               'tsai/data/core.py'),
                                'tsai.data.core.TSMultiLabelClassification.__init__': ( 'data.core.html#tsmultilabelclassification.__init__',
                                                                                        'tsai/data/core.py'),
                                'tsai.data.core.TSMultiLabelClassification.decodes': ( 'data.core.html#tsmultilabelclassification.decodes',
                                                                                       'tsai/data/core.py'),
                                'tsai.data.core.TSMultiLabelClassification.encodes': ( 'data.core.html#tsmultilabelclassification.encodes',
                                                                                       'tsai/data/core.py'),
                                'tsai.data.core.TSMultiLabelClassification.setups': ( 'data.core.html#tsmultilabelclassification.setups',
                                                                                      'tsai/data/core.py'),
                                'tsai.data.core.TSTensor': ('data.core.html#tstensor', 'tsai/data/core.py'),
                                'tsai.data.core.TSTensor.__repr__': ('data.core.html#tstensor.__repr__', 'tsai/data/core.py'),
                                'tsai.data.core.TSTensor.len': ('data.core.html#tstensor.len', 'tsai/data/core.py'),
                                'tsai.data.core.TSTensor.vars': ('data.core.html#tstensor.vars', 'tsai/data/core.py'),
                                'tsai.data.core.TSTensorBlock': ('data.core.html#tstensorblock', 'tsai/data/core.py'),
                                'tsai.data.core.TSTensorBlock.__init__': ('data.core.html#tstensorblock.__init__', 'tsai/data/core.py'),
                                'tsai.data.core.TSTfmdLists': ('data.core.html#tstfmdlists', 'tsai/data/core.py'),
                                'tsai.data.core.TSTfmdLists.__getitem__': ('data.core.html#tstfmdlists.__getitem__', 'tsai/data/core.py'),
                                'tsai.data.core.TfmdDL._one_pass': ('data.core.html#tfmddl._one_pass', 'tsai/data/core.py'),
                                'tsai.data.core.ToFloat': ('data.core.html#tofloat', 'tsai/data/core.py'),
                                'tsai.data.core.ToFloat.decodes': ('data.core.html#tofloat.decodes', 'tsai/data/core.py'),
                                'tsai.data.core.ToFloat.encodes': ('data.core.html#tofloat.encodes', 'tsai/data/core.py'),
                                'tsai.data.core.ToInt': ('data.core.html#toint', 'tsai/data/core.py'),
                                'tsai.data.core.ToInt.decodes': ('data.core.html#toint.decodes', 'tsai/data/core.py'),
                                'tsai.data.core.ToInt.encodes': ('data.core.html#toint.encodes', 'tsai/data/core.py'),
                                'tsai.data.core.ToNumpyTensor': ('data.core.html#tonumpytensor', 'tsai/data/core.py'),
                                'tsai.data.core.ToNumpyTensor.encodes': ('data.core.html#tonumpytensor.encodes', 'tsai/data/core.py'),
                                'tsai.data.core.ToTSTensor': ('data.core.html#totstensor', 'tsai/data/core.py'),
                                'tsai.data.core.ToTSTensor.encodes': ('data.core.html#totstensor.encodes', 'tsai/data/core.py'),
                                'tsai.data.core.TorchDataset': ('data.core.html#torchdataset', 'tsai/data/core.py'),
                                'tsai.data.core.TorchDataset.__getitem__': ('data.core.html#torchdataset.__getitem__', 'tsai/data/core.py'),
                                'tsai.data.core.TorchDataset.__init__': ('data.core.html#torchdataset.__init__', 'tsai/data/core.py'),
                                'tsai.data.core.TorchDataset.__len__': ('data.core.html#torchdataset.__len__', 'tsai/data/core.py'),
                                'tsai.data.core._flatten_list': ('data.core.html#_flatten_list', 'tsai/data/core.py'),
                                'tsai.data.core._remove_brackets': ('data.core.html#_remove_brackets', 'tsai/data/core.py'),
                                'tsai.data.core.add_ds': ('data.core.html#add_ds', 'tsai/data/core.py'),
                                'tsai.data.core.get_best_dl_params': ('data.core.html#get_best_dl_params', 'tsai/data/core.py'),
                                'tsai.data.core.get_best_dls_params': ('data.core.html#get_best_dls_params', 'tsai/data/core.py'),
                                'tsai.data.core.get_c': ('data.core.html#get_c', 'tsai/data/core.py'),
                                'tsai.data.core.get_dl_percent_per_epoch': ('data.core.html#get_dl_percent_per_epoch', 'tsai/data/core.py'),
                                'tsai.data.core.get_subset_dl': ('data.core.html#get_subset_dl', 'tsai/data/core.py'),
                                'tsai.data.core.get_time_per_batch': ('data.core.html#get_time_per_batch', 'tsai/data/core.py'),
                                'tsai.data.core.get_ts_dl': ('data.core.html#get_ts_dl', 'tsai/data/core.py'),
                                'tsai.data.core.get_ts_dls': ('data.core.html#get_ts_dls', 'tsai/data/core.py'),
                                'tsai.data.core.show_tuple': ('data.core.html#show_tuple', 'tsai/data/core.py'),
                                'tsai.data.core.tscoll_repr': ('data.core.html#tscoll_repr', 'tsai/data/core.py')},
            'tsai.data.external': { 'tsai.data.external._TsFileParseException': ( 'data.external.html#_tsfileparseexception',
                                                                                  'tsai/data/external.py'),
                                    'tsai.data.external._are_columns_nested': ( 'data.external.html#_are_columns_nested',
                                                                                'tsai/data/external.py'),
                                    'tsai.data.external._cell_is_series_or_array': ( 'data.external.html#_cell_is_series_or_array',
                                                                                     'tsai/data/external.py'),
                                    'tsai.data.external._check_X': ('data.external.html#_check_x', 'tsai/data/external.py'),
                                    'tsai.data.external._convert_series_cell_to_numpy': ( 'data.external.html#_convert_series_cell_to_numpy',
                                                                                          'tsai/data/external.py'),
                                    'tsai.data.external._from_multi_index_to_3d_numpy': ( 'data.external.html#_from_multi_index_to_3d_numpy',
                                                                                          'tsai/data/external.py'),
                                    'tsai.data.external._from_nested_to_3d_numpy': ( 'data.external.html#_from_nested_to_3d_numpy',
                                                                                     'tsai/data/external.py'),
                                    'tsai.data.external._from_nested_to_multi_index': ( 'data.external.html#_from_nested_to_multi_index',
                                                                                        'tsai/data/external.py'),
                                    'tsai.data.external._nested_cell_mask': ( 'data.external.html#_nested_cell_mask',
                                                                              'tsai/data/external.py'),
                                    'tsai.data.external._ts2df': ('data.external.html#_ts2df', 'tsai/data/external.py'),
                                    'tsai.data.external._ts2dfV2': ('data.external.html#_ts2dfv2', 'tsai/data/external.py'),
                                    'tsai.data.external.check_data': ('data.external.html#check_data', 'tsai/data/external.py'),
                                    'tsai.data.external.convert_tsf_to_dataframe': ( 'data.external.html#convert_tsf_to_dataframe',
                                                                                     'tsai/data/external.py'),
                                    'tsai.data.external.decompress_from_url': ( 'data.external.html#decompress_from_url',
                                                                                'tsai/data/external.py'),
                                    'tsai.data.external.download_all_long_term_forecasting_data': ( 'data.external.html#download_all_long_term_forecasting_data',
                                                                                                    'tsai/data/external.py'),
                                    'tsai.data.external.download_data': ('data.external.html#download_data', 'tsai/data/external.py'),
                                    'tsai.data.external.get_Monash_forecasting_data': ( 'data.external.html#get_monash_forecasting_data',
                                                                                        'tsai/data/external.py'),
                                    'tsai.data.external.get_Monash_regression_data': ( 'data.external.html#get_monash_regression_data',
                                                                                       'tsai/data/external.py'),
                                    'tsai.data.external.get_Monash_regression_list': ( 'data.external.html#get_monash_regression_list',
                                                                                       'tsai/data/external.py'),
                                    'tsai.data.external.get_UCR_data': ('data.external.html#get_ucr_data', 'tsai/data/external.py'),
                                    'tsai.data.external.get_UCR_multivariate_list': ( 'data.external.html#get_ucr_multivariate_list',
                                                                                      'tsai/data/external.py'),
                                    'tsai.data.external.get_UCR_univariate_list': ( 'data.external.html#get_ucr_univariate_list',
                                                                                    'tsai/data/external.py'),
                                    'tsai.data.external.get_fcst_horizon': ('data.external.html#get_fcst_horizon', 'tsai/data/external.py'),
                                    'tsai.data.external.get_forecasting_list': ( 'data.external.html#get_forecasting_list',
                                                                                 'tsai/data/external.py'),
                                    'tsai.data.external.get_forecasting_time_series': ( 'data.external.html#get_forecasting_time_series',
                                                                                        'tsai/data/external.py'),
                                    'tsai.data.external.get_long_term_forecasting_data': ( 'data.external.html#get_long_term_forecasting_data',
                                                                                           'tsai/data/external.py'),
                                    'tsai.data.external.preprocess_Monash_df': ( 'data.external.html#preprocess_monash_df',
                                                                                 'tsai/data/external.py'),
                                    'tsai.data.external.unzip_file': ('data.external.html#unzip_file', 'tsai/data/external.py')},
            'tsai.data.features': {'tsai.data.features.get_ts_features': ('data.features.html#get_ts_features', 'tsai/data/features.py')},
            'tsai.data.image': { 'tsai.data.image.TSImage': ('data.image.html#tsimage', 'tsai/data/image.py'),
                                 'tsai.data.image.TSImage.__getitem__': ('data.image.html#tsimage.__getitem__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSImage.__repr__': ('data.image.html#tsimage.__repr__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSImage.len': ('data.image.html#tsimage.len', 'tsai/data/image.py'),
                                 'tsai.data.image.TSImage.show': ('data.image.html#tsimage.show', 'tsai/data/image.py'),
                                 'tsai.data.image.TSImage.vars': ('data.image.html#tsimage.vars', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToGADF': ('data.image.html#tstogadf', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToGADF.__init__': ('data.image.html#tstogadf.__init__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToGADF.encodes': ('data.image.html#tstogadf.encodes', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToGASF': ('data.image.html#tstogasf', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToGASF.__init__': ('data.image.html#tstogasf.__init__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToGASF.encodes': ('data.image.html#tstogasf.encodes', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToJRP': ('data.image.html#tstojrp', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToJRP.__init__': ('data.image.html#tstojrp.__init__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToJRP.encodes': ('data.image.html#tstojrp.encodes', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToMTF': ('data.image.html#tstomtf', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToMTF.__init__': ('data.image.html#tstomtf.__init__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToMTF.encodes': ('data.image.html#tstomtf.encodes', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToMat': ('data.image.html#tstomat', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToMat.__init__': ('data.image.html#tstomat.__init__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToMat.encodes': ('data.image.html#tstomat.encodes', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToPlot': ('data.image.html#tstoplot', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToPlot.__init__': ('data.image.html#tstoplot.__init__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToPlot.encodes': ('data.image.html#tstoplot.encodes', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToRP': ('data.image.html#tstorp', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToRP.__init__': ('data.image.html#tstorp.__init__', 'tsai/data/image.py'),
                                 'tsai.data.image.TSToRP.encodes': ('data.image.html#tstorp.encodes', 'tsai/data/image.py'),
                                 'tsai.data.image.ToTSImage': ('data.image.html#totsimage', 'tsai/data/image.py'),
                                 'tsai.data.image.ToTSImage.encodes': ('data.image.html#totsimage.encodes', 'tsai/data/image.py')},
            'tsai.data.metadatasets': { 'tsai.data.metadatasets.TSMetaDataset': ( 'data.metadatasets.html#tsmetadataset',
                                                                                  'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDataset.__getitem__': ( 'data.metadatasets.html#tsmetadataset.__getitem__',
                                                                                              'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDataset.__init__': ( 'data.metadatasets.html#tsmetadataset.__init__',
                                                                                           'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDataset.__len__': ( 'data.metadatasets.html#tsmetadataset.__len__',
                                                                                          'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDataset._mapping': ( 'data.metadatasets.html#tsmetadataset._mapping',
                                                                                           'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDataset.len': ( 'data.metadatasets.html#tsmetadataset.len',
                                                                                      'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDataset.vars': ( 'data.metadatasets.html#tsmetadataset.vars',
                                                                                       'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDatasets': ( 'data.metadatasets.html#tsmetadatasets',
                                                                                   'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDatasets.__init__': ( 'data.metadatasets.html#tsmetadatasets.__init__',
                                                                                            'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDatasets.subset': ( 'data.metadatasets.html#tsmetadatasets.subset',
                                                                                          'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDatasets.train': ( 'data.metadatasets.html#tsmetadatasets.train',
                                                                                         'tsai/data/metadatasets.py'),
                                        'tsai.data.metadatasets.TSMetaDatasets.valid': ( 'data.metadatasets.html#tsmetadatasets.valid',
                                                                                         'tsai/data/metadatasets.py')},
            'tsai.data.mixed': { 'tsai.data.mixed.MixedDataLoader': ('data.mixed.html#mixeddataloader', 'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader.__init__': ( 'data.mixed.html#mixeddataloader.__init__',
                                                                               'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader.__iter__': ( 'data.mixed.html#mixeddataloader.__iter__',
                                                                               'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader.__len__': ( 'data.mixed.html#mixeddataloader.__len__',
                                                                              'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader._arrayisin': ( 'data.mixed.html#mixeddataloader._arrayisin',
                                                                                 'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader._get_idxs': ( 'data.mixed.html#mixeddataloader._get_idxs',
                                                                                'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader._get_vals': ( 'data.mixed.html#mixeddataloader._get_vals',
                                                                                'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader._split_idxs': ( 'data.mixed.html#mixeddataloader._split_idxs',
                                                                                  'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader.new': ('data.mixed.html#mixeddataloader.new', 'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader.one_batch': ( 'data.mixed.html#mixeddataloader.one_batch',
                                                                                'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader.show_batch': ( 'data.mixed.html#mixeddataloader.show_batch',
                                                                                 'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader.shuffle_fn': ( 'data.mixed.html#mixeddataloader.shuffle_fn',
                                                                                 'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoader.to': ('data.mixed.html#mixeddataloader.to', 'tsai/data/mixed.py'),
                                 'tsai.data.mixed.MixedDataLoaders': ('data.mixed.html#mixeddataloaders', 'tsai/data/mixed.py'),
                                 'tsai.data.mixed.get_mixed_dls': ('data.mixed.html#get_mixed_dls', 'tsai/data/mixed.py')},
            'tsai.data.mixed_augmentation': { 'tsai.data.mixed_augmentation.CutMix1d': ( 'data.mixed_augmentation.html#cutmix1d',
                                                                                         'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.CutMix1d.__init__': ( 'data.mixed_augmentation.html#cutmix1d.__init__',
                                                                                                  'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.CutMix1d.before_batch': ( 'data.mixed_augmentation.html#cutmix1d.before_batch',
                                                                                                      'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.CutMix1d.rand_bbox': ( 'data.mixed_augmentation.html#cutmix1d.rand_bbox',
                                                                                                   'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.IntraClassCutMix1d': ( 'data.mixed_augmentation.html#intraclasscutmix1d',
                                                                                                   'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.IntraClassCutMix1d.__init__': ( 'data.mixed_augmentation.html#intraclasscutmix1d.__init__',
                                                                                                            'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.IntraClassCutMix1d.before_batch': ( 'data.mixed_augmentation.html#intraclasscutmix1d.before_batch',
                                                                                                                'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.IntraClassCutMix1d.rand_bbox': ( 'data.mixed_augmentation.html#intraclasscutmix1d.rand_bbox',
                                                                                                             'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.MixHandler1d': ( 'data.mixed_augmentation.html#mixhandler1d',
                                                                                             'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.MixHandler1d.__init__': ( 'data.mixed_augmentation.html#mixhandler1d.__init__',
                                                                                                      'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.MixHandler1d.after_train': ( 'data.mixed_augmentation.html#mixhandler1d.after_train',
                                                                                                         'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.MixHandler1d.before_train': ( 'data.mixed_augmentation.html#mixhandler1d.before_train',
                                                                                                          'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.MixHandler1d.lf': ( 'data.mixed_augmentation.html#mixhandler1d.lf',
                                                                                                'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.MixUp1d': ( 'data.mixed_augmentation.html#mixup1d',
                                                                                        'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.MixUp1d.__init__': ( 'data.mixed_augmentation.html#mixup1d.__init__',
                                                                                                 'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation.MixUp1d.before_batch': ( 'data.mixed_augmentation.html#mixup1d.before_batch',
                                                                                                     'tsai/data/mixed_augmentation.py'),
                                              'tsai.data.mixed_augmentation._reduce_loss': ( 'data.mixed_augmentation.html#_reduce_loss',
                                                                                             'tsai/data/mixed_augmentation.py')},
            'tsai.data.preparation': { 'tsai.data.preparation.SlidingWindow': ( 'data.preparation.html#slidingwindow',
                                                                                'tsai/data/preparation.py'),
                                       'tsai.data.preparation.SlidingWindowPanel': ( 'data.preparation.html#slidingwindowpanel',
                                                                                     'tsai/data/preparation.py'),
                                       'tsai.data.preparation.add_delta_timestamp_cols': ( 'data.preparation.html#add_delta_timestamp_cols',
                                                                                           'tsai/data/preparation.py'),
                                       'tsai.data.preparation.add_missing_timestamps': ( 'data.preparation.html#add_missing_timestamps',
                                                                                         'tsai/data/preparation.py'),
                                       'tsai.data.preparation.add_missing_value_cols': ( 'data.preparation.html#add_missing_value_cols',
                                                                                         'tsai/data/preparation.py'),
                                       'tsai.data.preparation.apply_sliding_window': ( 'data.preparation.html#apply_sliding_window',
                                                                                       'tsai/data/preparation.py'),
                                       'tsai.data.preparation.backward_gaps': ( 'data.preparation.html#backward_gaps',
                                                                                'tsai/data/preparation.py'),
                                       'tsai.data.preparation.basic_data_preparation_fn': ( 'data.preparation.html#basic_data_preparation_fn',
                                                                                            'tsai/data/preparation.py'),
                                       'tsai.data.preparation.check_safe_conversion': ( 'data.preparation.html#check_safe_conversion',
                                                                                        'tsai/data/preparation.py'),
                                       'tsai.data.preparation.df2Xy': ('data.preparation.html#df2xy', 'tsai/data/preparation.py'),
                                       'tsai.data.preparation.df2np3d': ('data.preparation.html#df2np3d', 'tsai/data/preparation.py'),
                                       'tsai.data.preparation.forward_gaps': ( 'data.preparation.html#forward_gaps',
                                                                               'tsai/data/preparation.py'),
                                       'tsai.data.preparation.get_gaps': ('data.preparation.html#get_gaps', 'tsai/data/preparation.py'),
                                       'tsai.data.preparation.identify_padding': ( 'data.preparation.html#identify_padding',
                                                                                   'tsai/data/preparation.py'),
                                       'tsai.data.preparation.nearest_gaps': ( 'data.preparation.html#nearest_gaps',
                                                                               'tsai/data/preparation.py'),
                                       'tsai.data.preparation.prepare_forecasting_data': ( 'data.preparation.html#prepare_forecasting_data',
                                                                                           'tsai/data/preparation.py'),
                                       'tsai.data.preparation.prepare_idxs': ( 'data.preparation.html#prepare_idxs',
                                                                               'tsai/data/preparation.py'),
                                       'tsai.data.preparation.prepare_sel_vars_and_steps': ( 'data.preparation.html#prepare_sel_vars_and_steps',
                                                                                             'tsai/data/preparation.py'),
                                       'tsai.data.preparation.split_Xy': ('data.preparation.html#split_xy', 'tsai/data/preparation.py'),
                                       'tsai.data.preparation.time_encoding': ( 'data.preparation.html#time_encoding',
                                                                                'tsai/data/preparation.py')},
            'tsai.data.preprocessing': { 'tsai.data.preprocessing.NumpyTensor.mul_max': ( 'data.preprocessing.html#numpytensor.mul_max',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.NumpyTensor.mul_min': ( 'data.preprocessing.html#numpytensor.mul_min',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.OneHot': ('data.preprocessing.html#onehot', 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.OneHot.__init__': ( 'data.preprocessing.html#onehot.__init__',
                                                                                      'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.OneHot.decodes': ( 'data.preprocessing.html#onehot.decodes',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.OneHot.encodes': ( 'data.preprocessing.html#onehot.encodes',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.Preprocessor': ( 'data.preprocessing.html#preprocessor',
                                                                                   'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.Preprocessor.__init__': ( 'data.preprocessing.html#preprocessor.__init__',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.Preprocessor.fit': ( 'data.preprocessing.html#preprocessor.fit',
                                                                                       'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.Preprocessor.inverse_transform': ( 'data.preprocessing.html#preprocessor.inverse_transform',
                                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.Preprocessor.transform': ( 'data.preprocessing.html#preprocessor.transform',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.ReLabeler': ( 'data.preprocessing.html#relabeler',
                                                                                'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSAdd': ('data.preprocessing.html#tsadd', 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSAdd.__init__': ( 'data.preprocessing.html#tsadd.__init__',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSAdd.__repr__': ( 'data.preprocessing.html#tsadd.__repr__',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSAdd.encodes': ( 'data.preprocessing.html#tsadd.encodes',
                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCatEncode': ( 'data.preprocessing.html#tscatencode',
                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCatEncode.__init__': ( 'data.preprocessing.html#tscatencode.__init__',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCatEncode.encodes': ( 'data.preprocessing.html#tscatencode.encodes',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCategoricalEncoder': ( 'data.preprocessing.html#tscategoricalencoder',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCategoricalEncoder.__init__': ( 'data.preprocessing.html#tscategoricalencoder.__init__',
                                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCategoricalEncoder.fit': ( 'data.preprocessing.html#tscategoricalencoder.fit',
                                                                                               'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCategoricalEncoder.inverse_transform': ( 'data.preprocessing.html#tscategoricalencoder.inverse_transform',
                                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCategoricalEncoder.transform': ( 'data.preprocessing.html#tscategoricalencoder.transform',
                                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClip': ('data.preprocessing.html#tsclip', 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClip.__init__': ( 'data.preprocessing.html#tsclip.__init__',
                                                                                      'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClip.__repr__': ( 'data.preprocessing.html#tsclip.__repr__',
                                                                                      'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClip.encodes': ( 'data.preprocessing.html#tsclip.encodes',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClipByVar': ( 'data.preprocessing.html#tsclipbyvar',
                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClipByVar.__init__': ( 'data.preprocessing.html#tsclipbyvar.__init__',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClipByVar.encodes': ( 'data.preprocessing.html#tsclipbyvar.encodes',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClipOutliers': ( 'data.preprocessing.html#tsclipoutliers',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClipOutliers.__init__': ( 'data.preprocessing.html#tsclipoutliers.__init__',
                                                                                              'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClipOutliers.__repr__': ( 'data.preprocessing.html#tsclipoutliers.__repr__',
                                                                                              'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClipOutliers.encodes': ( 'data.preprocessing.html#tsclipoutliers.encodes',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSClipOutliers.setups': ( 'data.preprocessing.html#tsclipoutliers.setups',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCyclicalPosition': ( 'data.preprocessing.html#tscyclicalposition',
                                                                                         'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCyclicalPosition.__init__': ( 'data.preprocessing.html#tscyclicalposition.__init__',
                                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSCyclicalPosition.encodes': ( 'data.preprocessing.html#tscyclicalposition.encodes',
                                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDateTimeEncoder': ( 'data.preprocessing.html#tsdatetimeencoder',
                                                                                        'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDateTimeEncoder.__init__': ( 'data.preprocessing.html#tsdatetimeencoder.__init__',
                                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDateTimeEncoder.fit': ( 'data.preprocessing.html#tsdatetimeencoder.fit',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDateTimeEncoder.transform': ( 'data.preprocessing.html#tsdatetimeencoder.transform',
                                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDiff': ('data.preprocessing.html#tsdiff', 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDiff.__init__': ( 'data.preprocessing.html#tsdiff.__init__',
                                                                                      'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDiff.__repr__': ( 'data.preprocessing.html#tsdiff.__repr__',
                                                                                      'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDiff.encodes': ( 'data.preprocessing.html#tsdiff.encodes',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDropFeatByKey': ( 'data.preprocessing.html#tsdropfeatbykey',
                                                                                      'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDropFeatByKey.__init__': ( 'data.preprocessing.html#tsdropfeatbykey.__init__',
                                                                                               'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDropFeatByKey.encodes': ( 'data.preprocessing.html#tsdropfeatbykey.encodes',
                                                                                              'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDropVars': ( 'data.preprocessing.html#tsdropvars',
                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDropVars.__init__': ( 'data.preprocessing.html#tsdropvars.__init__',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSDropVars.encodes': ( 'data.preprocessing.html#tsdropvars.encodes',
                                                                                         'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSGaussianStandardize': ( 'data.preprocessing.html#tsgaussianstandardize',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSGaussianStandardize.__init__': ( 'data.preprocessing.html#tsgaussianstandardize.__init__',
                                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSGaussianStandardize.encodes': ( 'data.preprocessing.html#tsgaussianstandardize.encodes',
                                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLinearPosition': ( 'data.preprocessing.html#tslinearposition',
                                                                                       'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLinearPosition.__init__': ( 'data.preprocessing.html#tslinearposition.__init__',
                                                                                                'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLinearPosition.encodes': ( 'data.preprocessing.html#tslinearposition.encodes',
                                                                                               'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLog': ('data.preprocessing.html#tslog', 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLog.__init__': ( 'data.preprocessing.html#tslog.__init__',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLog.__repr__': ( 'data.preprocessing.html#tslog.__repr__',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLog.decodes': ( 'data.preprocessing.html#tslog.decodes',
                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLog.encodes': ( 'data.preprocessing.html#tslog.encodes',
                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLogReturn': ( 'data.preprocessing.html#tslogreturn',
                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLogReturn.__init__': ( 'data.preprocessing.html#tslogreturn.__init__',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLogReturn.__repr__': ( 'data.preprocessing.html#tslogreturn.__repr__',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSLogReturn.encodes': ( 'data.preprocessing.html#tslogreturn.encodes',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSMissingness': ( 'data.preprocessing.html#tsmissingness',
                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSMissingness.__init__': ( 'data.preprocessing.html#tsmissingness.__init__',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSMissingness.encodes': ( 'data.preprocessing.html#tsmissingness.encodes',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSMissingnessEncoder': ( 'data.preprocessing.html#tsmissingnessencoder',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSMissingnessEncoder.__init__': ( 'data.preprocessing.html#tsmissingnessencoder.__init__',
                                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSMissingnessEncoder.fit': ( 'data.preprocessing.html#tsmissingnessencoder.fit',
                                                                                               'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSMissingnessEncoder.inverse_transform': ( 'data.preprocessing.html#tsmissingnessencoder.inverse_transform',
                                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSMissingnessEncoder.transform': ( 'data.preprocessing.html#tsmissingnessencoder.transform',
                                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNan2Value': ( 'data.preprocessing.html#tsnan2value',
                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNan2Value.__init__': ( 'data.preprocessing.html#tsnan2value.__init__',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNan2Value.encodes': ( 'data.preprocessing.html#tsnan2value.encodes',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNormalize': ( 'data.preprocessing.html#tsnormalize',
                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNormalize.__init__': ( 'data.preprocessing.html#tsnormalize.__init__',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNormalize.__repr__': ( 'data.preprocessing.html#tsnormalize.__repr__',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNormalize.encodes': ( 'data.preprocessing.html#tsnormalize.encodes',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNormalize.from_stats': ( 'data.preprocessing.html#tsnormalize.from_stats',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSNormalize.setups': ( 'data.preprocessing.html#tsnormalize.setups',
                                                                                         'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSOneHotEncode': ( 'data.preprocessing.html#tsonehotencode',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSOneHotEncode.__init__': ( 'data.preprocessing.html#tsonehotencode.__init__',
                                                                                              'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSOneHotEncode.encodes': ( 'data.preprocessing.html#tsonehotencode.encodes',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSOneHotEncoder': ( 'data.preprocessing.html#tsonehotencoder',
                                                                                      'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSOneHotEncoder.__init__': ( 'data.preprocessing.html#tsonehotencoder.__init__',
                                                                                               'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSOneHotEncoder.fit': ( 'data.preprocessing.html#tsonehotencoder.fit',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSOneHotEncoder.transform': ( 'data.preprocessing.html#tsonehotencoder.transform',
                                                                                                'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSPosition': ( 'data.preprocessing.html#tsposition',
                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSPosition.__init__': ( 'data.preprocessing.html#tsposition.__init__',
                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSPosition.encodes': ( 'data.preprocessing.html#tsposition.encodes',
                                                                                         'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSPositionGaps': ( 'data.preprocessing.html#tspositiongaps',
                                                                                     'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSPositionGaps.__init__': ( 'data.preprocessing.html#tspositiongaps.__init__',
                                                                                              'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSPositionGaps.encodes': ( 'data.preprocessing.html#tspositiongaps.encodes',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSRobustScale': ( 'data.preprocessing.html#tsrobustscale',
                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSRobustScale.__init__': ( 'data.preprocessing.html#tsrobustscale.__init__',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSRobustScale.__repr__': ( 'data.preprocessing.html#tsrobustscale.__repr__',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSRobustScale.encodes': ( 'data.preprocessing.html#tsrobustscale.encodes',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSRobustScale.setups': ( 'data.preprocessing.html#tsrobustscale.setups',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSRollingMean': ( 'data.preprocessing.html#tsrollingmean',
                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSRollingMean.__init__': ( 'data.preprocessing.html#tsrollingmean.__init__',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSRollingMean.encodes': ( 'data.preprocessing.html#tsrollingmean.encodes',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSSelfMissingness': ( 'data.preprocessing.html#tsselfmissingness',
                                                                                        'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSSelfMissingness.__init__': ( 'data.preprocessing.html#tsselfmissingness.__init__',
                                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSSelfMissingness.encodes': ( 'data.preprocessing.html#tsselfmissingness.encodes',
                                                                                                'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSShrinkDataFrame': ( 'data.preprocessing.html#tsshrinkdataframe',
                                                                                        'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSShrinkDataFrame.__init__': ( 'data.preprocessing.html#tsshrinkdataframe.__init__',
                                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSShrinkDataFrame.fit': ( 'data.preprocessing.html#tsshrinkdataframe.fit',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSShrinkDataFrame.inverse_transform': ( 'data.preprocessing.html#tsshrinkdataframe.inverse_transform',
                                                                                                          'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSShrinkDataFrame.transform': ( 'data.preprocessing.html#tsshrinkdataframe.transform',
                                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardize': ( 'data.preprocessing.html#tsstandardize',
                                                                                    'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardize.__init__': ( 'data.preprocessing.html#tsstandardize.__init__',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardize.__repr__': ( 'data.preprocessing.html#tsstandardize.__repr__',
                                                                                             'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardize.decodes': ( 'data.preprocessing.html#tsstandardize.decodes',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardize.encodes': ( 'data.preprocessing.html#tsstandardize.encodes',
                                                                                            'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardize.from_stats': ( 'data.preprocessing.html#tsstandardize.from_stats',
                                                                                               'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardize.setups': ( 'data.preprocessing.html#tsstandardize.setups',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardizeTuple': ( 'data.preprocessing.html#tsstandardizetuple',
                                                                                         'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardizeTuple.__init__': ( 'data.preprocessing.html#tsstandardizetuple.__init__',
                                                                                                  'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardizeTuple.decodes': ( 'data.preprocessing.html#tsstandardizetuple.decodes',
                                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSStandardizeTuple.encodes': ( 'data.preprocessing.html#tsstandardizetuple.encodes',
                                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSTensor.mul_max': ( 'data.preprocessing.html#tstensor.mul_max',
                                                                                       'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.TSTensor.mul_min': ( 'data.preprocessing.html#tstensor.mul_min',
                                                                                       'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.ToNumpyCategory': ( 'data.preprocessing.html#tonumpycategory',
                                                                                      'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.ToNumpyCategory.__init__': ( 'data.preprocessing.html#tonumpycategory.__init__',
                                                                                               'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.ToNumpyCategory.decodes': ( 'data.preprocessing.html#tonumpycategory.decodes',
                                                                                              'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.ToNumpyCategory.encodes': ( 'data.preprocessing.html#tonumpycategory.encodes',
                                                                                              'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.get_random_stats': ( 'data.preprocessing.html#get_random_stats',
                                                                                       'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.get_stats_with_uncertainty': ( 'data.preprocessing.html#get_stats_with_uncertainty',
                                                                                                 'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.torch.Tensor.mul_max': ( 'data.preprocessing.html#torch.tensor.mul_max',
                                                                                           'tsai/data/preprocessing.py'),
                                         'tsai.data.preprocessing.torch.Tensor.mul_min': ( 'data.preprocessing.html#torch.tensor.mul_min',
                                                                                           'tsai/data/preprocessing.py')},
            'tsai.data.tabular': { 'tsai.data.tabular.get_tabular_dls': ('data.tabular.html#get_tabular_dls', 'tsai/data/tabular.py'),
                                   'tsai.data.tabular.get_tabular_ds': ('data.tabular.html#get_tabular_ds', 'tsai/data/tabular.py'),
                                   'tsai.data.tabular.preprocess_df': ('data.tabular.html#preprocess_df', 'tsai/data/tabular.py')},
            'tsai.data.transforms': { 'tsai.data.transforms.RandAugment': ('data.transforms.html#randaugment', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.RandAugment.__init__': ( 'data.transforms.html#randaugment.__init__',
                                                                                     'tsai/data/transforms.py'),
                                      'tsai.data.transforms.RandAugment.encodes': ( 'data.transforms.html#randaugment.encodes',
                                                                                    'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSBlur': ('data.transforms.html#tsblur', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSBlur.__init__': ( 'data.transforms.html#tsblur.__init__',
                                                                                'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSBlur.encodes': ( 'data.transforms.html#tsblur.encodes',
                                                                               'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSCutOut': ('data.transforms.html#tscutout', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSCutOut.__init__': ( 'data.transforms.html#tscutout.__init__',
                                                                                  'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSCutOut.encodes': ( 'data.transforms.html#tscutout.encodes',
                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSDownUpScale': ( 'data.transforms.html#tsdownupscale',
                                                                              'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSDownUpScale.__init__': ( 'data.transforms.html#tsdownupscale.__init__',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSDownUpScale.encodes': ( 'data.transforms.html#tsdownupscale.encodes',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSFreqDenoise': ( 'data.transforms.html#tsfreqdenoise',
                                                                              'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSFreqDenoise.__init__': ( 'data.transforms.html#tsfreqdenoise.__init__',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSFreqDenoise.encodes': ( 'data.transforms.html#tsfreqdenoise.encodes',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSGaussianNoise': ( 'data.transforms.html#tsgaussiannoise',
                                                                                'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSGaussianNoise.__init__': ( 'data.transforms.html#tsgaussiannoise.__init__',
                                                                                         'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSGaussianNoise.encodes': ( 'data.transforms.html#tsgaussiannoise.encodes',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSHorizontalFlip': ( 'data.transforms.html#tshorizontalflip',
                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSHorizontalFlip.__init__': ( 'data.transforms.html#tshorizontalflip.__init__',
                                                                                          'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSHorizontalFlip.encodes': ( 'data.transforms.html#tshorizontalflip.encodes',
                                                                                         'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSIdentity': ('data.transforms.html#tsidentity', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSIdentity.__init__': ( 'data.transforms.html#tsidentity.__init__',
                                                                                    'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSIdentity.encodes': ( 'data.transforms.html#tsidentity.encodes',
                                                                                   'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSInputDropout': ( 'data.transforms.html#tsinputdropout',
                                                                               'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSInputDropout.__init__': ( 'data.transforms.html#tsinputdropout.__init__',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSInputDropout.encodes': ( 'data.transforms.html#tsinputdropout.encodes',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagAddNoise': ( 'data.transforms.html#tsmagaddnoise',
                                                                              'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagAddNoise.__init__': ( 'data.transforms.html#tsmagaddnoise.__init__',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagAddNoise.encodes': ( 'data.transforms.html#tsmagaddnoise.encodes',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagMulNoise': ( 'data.transforms.html#tsmagmulnoise',
                                                                              'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagMulNoise.__init__': ( 'data.transforms.html#tsmagmulnoise.__init__',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagMulNoise.encodes': ( 'data.transforms.html#tsmagmulnoise.encodes',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagScale': ('data.transforms.html#tsmagscale', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagScale.__init__': ( 'data.transforms.html#tsmagscale.__init__',
                                                                                    'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagScale.encodes': ( 'data.transforms.html#tsmagscale.encodes',
                                                                                   'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagScalePerVar': ( 'data.transforms.html#tsmagscalepervar',
                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagScalePerVar.__init__': ( 'data.transforms.html#tsmagscalepervar.__init__',
                                                                                          'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagScalePerVar.encodes': ( 'data.transforms.html#tsmagscalepervar.encodes',
                                                                                         'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagWarp': ('data.transforms.html#tsmagwarp', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagWarp.__init__': ( 'data.transforms.html#tsmagwarp.__init__',
                                                                                   'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMagWarp.encodes': ( 'data.transforms.html#tsmagwarp.encodes',
                                                                                  'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMask2Value': ('data.transforms.html#tsmask2value', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMask2Value.__init__': ( 'data.transforms.html#tsmask2value.__init__',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMask2Value.encodes': ( 'data.transforms.html#tsmask2value.encodes',
                                                                                     'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMaskOut': ('data.transforms.html#tsmaskout', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMaskOut.__init__': ( 'data.transforms.html#tsmaskout.__init__',
                                                                                   'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSMaskOut.encodes': ( 'data.transforms.html#tsmaskout.encodes',
                                                                                  'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandom2Value': ( 'data.transforms.html#tsrandom2value',
                                                                               'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandom2Value.__init__': ( 'data.transforms.html#tsrandom2value.__init__',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandom2Value.encodes': ( 'data.transforms.html#tsrandom2value.encodes',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomConv': ('data.transforms.html#tsrandomconv', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomConv.__init__': ( 'data.transforms.html#tsrandomconv.__init__',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomConv.encodes': ( 'data.transforms.html#tsrandomconv.encodes',
                                                                                     'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomCropPad': ( 'data.transforms.html#tsrandomcroppad',
                                                                                'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomCropPad.__init__': ( 'data.transforms.html#tsrandomcroppad.__init__',
                                                                                         'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomCropPad.encodes': ( 'data.transforms.html#tsrandomcroppad.encodes',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomDownUpScale': ( 'data.transforms.html#tsrandomdownupscale',
                                                                                    'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomDownUpScale.__init__': ( 'data.transforms.html#tsrandomdownupscale.__init__',
                                                                                             'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomDownUpScale.encodes': ( 'data.transforms.html#tsrandomdownupscale.encodes',
                                                                                            'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomFreqNoise': ( 'data.transforms.html#tsrandomfreqnoise',
                                                                                  'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomFreqNoise.__init__': ( 'data.transforms.html#tsrandomfreqnoise.__init__',
                                                                                           'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomFreqNoise.encodes': ( 'data.transforms.html#tsrandomfreqnoise.encodes',
                                                                                          'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomLookBackOut': ( 'data.transforms.html#tsrandomlookbackout',
                                                                                    'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomLookBackOut.__init__': ( 'data.transforms.html#tsrandomlookbackout.__init__',
                                                                                             'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomLookBackOut.encodes': ( 'data.transforms.html#tsrandomlookbackout.encodes',
                                                                                            'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomLowRes': ( 'data.transforms.html#tsrandomlowres',
                                                                               'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomLowRes.__init__': ( 'data.transforms.html#tsrandomlowres.__init__',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomLowRes.encodes': ( 'data.transforms.html#tsrandomlowres.encodes',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomResizedCrop': ( 'data.transforms.html#tsrandomresizedcrop',
                                                                                    'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomResizedCrop.__init__': ( 'data.transforms.html#tsrandomresizedcrop.__init__',
                                                                                             'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomResizedCrop.encodes': ( 'data.transforms.html#tsrandomresizedcrop.encodes',
                                                                                            'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomResizedLookBack': ( 'data.transforms.html#tsrandomresizedlookback',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomResizedLookBack.__init__': ( 'data.transforms.html#tsrandomresizedlookback.__init__',
                                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomResizedLookBack.encodes': ( 'data.transforms.html#tsrandomresizedlookback.encodes',
                                                                                                'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomShift': ( 'data.transforms.html#tsrandomshift',
                                                                              'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomShift.__init__': ( 'data.transforms.html#tsrandomshift.__init__',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomShift.encodes': ( 'data.transforms.html#tsrandomshift.encodes',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomSize': ('data.transforms.html#tsrandomsize', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomSize.__init__': ( 'data.transforms.html#tsrandomsize.__init__',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomSize.encodes': ( 'data.transforms.html#tsrandomsize.encodes',
                                                                                     'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTimeScale': ( 'data.transforms.html#tsrandomtimescale',
                                                                                  'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTimeScale.__init__': ( 'data.transforms.html#tsrandomtimescale.__init__',
                                                                                           'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTimeScale.encodes': ( 'data.transforms.html#tsrandomtimescale.encodes',
                                                                                          'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTimeStep': ( 'data.transforms.html#tsrandomtimestep',
                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTimeStep.__init__': ( 'data.transforms.html#tsrandomtimestep.__init__',
                                                                                          'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTimeStep.encodes': ( 'data.transforms.html#tsrandomtimestep.encodes',
                                                                                         'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTrend': ( 'data.transforms.html#tsrandomtrend',
                                                                              'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTrend.__init__': ( 'data.transforms.html#tsrandomtrend.__init__',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomTrend.encodes': ( 'data.transforms.html#tsrandomtrend.encodes',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomZoomOut': ( 'data.transforms.html#tsrandomzoomout',
                                                                                'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomZoomOut.__init__': ( 'data.transforms.html#tsrandomzoomout.__init__',
                                                                                         'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSRandomZoomOut.encodes': ( 'data.transforms.html#tsrandomzoomout.encodes',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSResampleSteps': ( 'data.transforms.html#tsresamplesteps',
                                                                                'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSResampleSteps.__init__': ( 'data.transforms.html#tsresamplesteps.__init__',
                                                                                         'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSResampleSteps.encodes': ( 'data.transforms.html#tsresamplesteps.encodes',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSResize': ('data.transforms.html#tsresize', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSResize.__init__': ( 'data.transforms.html#tsresize.__init__',
                                                                                  'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSResize.encodes': ( 'data.transforms.html#tsresize.encodes',
                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSShuffleSteps': ( 'data.transforms.html#tsshufflesteps',
                                                                               'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSShuffleSteps.__init__': ( 'data.transforms.html#tsshufflesteps.__init__',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSShuffleSteps.encodes': ( 'data.transforms.html#tsshufflesteps.encodes',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSShuffle_HLs': ( 'data.transforms.html#tsshuffle_hls',
                                                                              'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSShuffle_HLs.__init__': ( 'data.transforms.html#tsshuffle_hls.__init__',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSShuffle_HLs.encodes': ( 'data.transforms.html#tsshuffle_hls.encodes',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSSmooth': ('data.transforms.html#tssmooth', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSSmooth.__init__': ( 'data.transforms.html#tssmooth.__init__',
                                                                                  'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSSmooth.encodes': ( 'data.transforms.html#tssmooth.encodes',
                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeNoise': ('data.transforms.html#tstimenoise', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeNoise.__init__': ( 'data.transforms.html#tstimenoise.__init__',
                                                                                     'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeNoise.encodes': ( 'data.transforms.html#tstimenoise.encodes',
                                                                                    'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeStepOut': ( 'data.transforms.html#tstimestepout',
                                                                              'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeStepOut.__init__': ( 'data.transforms.html#tstimestepout.__init__',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeStepOut.encodes': ( 'data.transforms.html#tstimestepout.encodes',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeWarp': ('data.transforms.html#tstimewarp', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeWarp.__init__': ( 'data.transforms.html#tstimewarp.__init__',
                                                                                    'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTimeWarp.encodes': ( 'data.transforms.html#tstimewarp.encodes',
                                                                                   'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTranslateX': ('data.transforms.html#tstranslatex', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTranslateX.__init__': ( 'data.transforms.html#tstranslatex.__init__',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSTranslateX.encodes': ( 'data.transforms.html#tstranslatex.encodes',
                                                                                     'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSVarOut': ('data.transforms.html#tsvarout', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSVarOut.__init__': ( 'data.transforms.html#tsvarout.__init__',
                                                                                  'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSVarOut.encodes': ( 'data.transforms.html#tsvarout.encodes',
                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSVerticalFlip': ( 'data.transforms.html#tsverticalflip',
                                                                               'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSVerticalFlip.__init__': ( 'data.transforms.html#tsverticalflip.__init__',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSVerticalFlip.encodes': ( 'data.transforms.html#tsverticalflip.encodes',
                                                                                       'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSWindowSlicing': ( 'data.transforms.html#tswindowslicing',
                                                                                'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSWindowSlicing.__init__': ( 'data.transforms.html#tswindowslicing.__init__',
                                                                                         'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSWindowSlicing.encodes': ( 'data.transforms.html#tswindowslicing.encodes',
                                                                                        'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSWindowWarp': ('data.transforms.html#tswindowwarp', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSWindowWarp.__init__': ( 'data.transforms.html#tswindowwarp.__init__',
                                                                                      'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TSWindowWarp.encodes': ( 'data.transforms.html#tswindowwarp.encodes',
                                                                                     'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TestTfm': ('data.transforms.html#testtfm', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TestTfm.__init__': ( 'data.transforms.html#testtfm.__init__',
                                                                                 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.TestTfm.encodes': ( 'data.transforms.html#testtfm.encodes',
                                                                                'tsai/data/transforms.py'),
                                      'tsai.data.transforms.get_tfm_name': ('data.transforms.html#get_tfm_name', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.maddest': ('data.transforms.html#maddest', 'tsai/data/transforms.py'),
                                      'tsai.data.transforms.random_cum_curve_generator': ( 'data.transforms.html#random_cum_curve_generator',
                                                                                           'tsai/data/transforms.py'),
                                      'tsai.data.transforms.random_cum_linear_generator': ( 'data.transforms.html#random_cum_linear_generator',
                                                                                            'tsai/data/transforms.py'),
                                      'tsai.data.transforms.random_cum_noise_generator': ( 'data.transforms.html#random_cum_noise_generator',
                                                                                           'tsai/data/transforms.py'),
                                      'tsai.data.transforms.random_curve_generator': ( 'data.transforms.html#random_curve_generator',
                                                                                       'tsai/data/transforms.py')},
            'tsai.data.unwindowed': { 'tsai.data.unwindowed.TSUnwindowedDataset': ( 'data.unwindowed.html#tsunwindoweddataset',
                                                                                    'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDataset.__getitem__': ( 'data.unwindowed.html#tsunwindoweddataset.__getitem__',
                                                                                                'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDataset.__init__': ( 'data.unwindowed.html#tsunwindoweddataset.__init__',
                                                                                             'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDataset.__len__': ( 'data.unwindowed.html#tsunwindoweddataset.__len__',
                                                                                            'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDataset.len': ( 'data.unwindowed.html#tsunwindoweddataset.len',
                                                                                        'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDataset.new_empty': ( 'data.unwindowed.html#tsunwindoweddataset.new_empty',
                                                                                              'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDataset.vars': ( 'data.unwindowed.html#tsunwindoweddataset.vars',
                                                                                         'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDatasets': ( 'data.unwindowed.html#tsunwindoweddatasets',
                                                                                     'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDatasets.__getitem__': ( 'data.unwindowed.html#tsunwindoweddatasets.__getitem__',
                                                                                                 'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDatasets.__init__': ( 'data.unwindowed.html#tsunwindoweddatasets.__init__',
                                                                                              'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDatasets.subset': ( 'data.unwindowed.html#tsunwindoweddatasets.subset',
                                                                                            'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDatasets.train': ( 'data.unwindowed.html#tsunwindoweddatasets.train',
                                                                                           'tsai/data/unwindowed.py'),
                                      'tsai.data.unwindowed.TSUnwindowedDatasets.valid': ( 'data.unwindowed.html#tsunwindoweddatasets.valid',
                                                                                           'tsai/data/unwindowed.py')},
            'tsai.data.validation': { 'tsai.data.validation.RandomSplitter': ( 'data.validation.html#randomsplitter',
                                                                               'tsai/data/validation.py'),
                                      'tsai.data.validation.TSSplitter': ('data.validation.html#tssplitter', 'tsai/data/validation.py'),
                                      'tsai.data.validation.TrainValidTestSplitter': ( 'data.validation.html#trainvalidtestsplitter',
                                                                                       'tsai/data/validation.py'),
                                      'tsai.data.validation.balance_idx': ('data.validation.html#balance_idx', 'tsai/data/validation.py'),
                                      'tsai.data.validation.calculate_fcst_stats': ( 'data.validation.html#calculate_fcst_stats',
                                                                                     'tsai/data/validation.py'),
                                      'tsai.data.validation.check_overlap': ( 'data.validation.html#check_overlap',
                                                                              'tsai/data/validation.py'),
                                      'tsai.data.validation.check_splits_overlap': ( 'data.validation.html#check_splits_overlap',
                                                                                     'tsai/data/validation.py'),
                                      'tsai.data.validation.combine_split_data': ( 'data.validation.html#combine_split_data',
                                                                                   'tsai/data/validation.py'),
                                      'tsai.data.validation.get_df_usable_idxs': ( 'data.validation.html#get_df_usable_idxs',
                                                                                   'tsai/data/validation.py'),
                                      'tsai.data.validation.get_forecasting_splits': ( 'data.validation.html#get_forecasting_splits',
                                                                                       'tsai/data/validation.py'),
                                      'tsai.data.validation.get_long_term_forecasting_splits': ( 'data.validation.html#get_long_term_forecasting_splits',
                                                                                                 'tsai/data/validation.py'),
                                      'tsai.data.validation.get_predefined_splits': ( 'data.validation.html#get_predefined_splits',
                                                                                      'tsai/data/validation.py'),
                                      'tsai.data.validation.get_splits': ('data.validation.html#get_splits', 'tsai/data/validation.py'),
                                      'tsai.data.validation.get_splits_len': ( 'data.validation.html#get_splits_len',
                                                                               'tsai/data/validation.py'),
                                      'tsai.data.validation.get_usable_idxs': ( 'data.validation.html#get_usable_idxs',
                                                                                'tsai/data/validation.py'),
                                      'tsai.data.validation.get_walk_forward_splits': ( 'data.validation.html#get_walk_forward_splits',
                                                                                        'tsai/data/validation.py'),
                                      'tsai.data.validation.leakage_finder': ( 'data.validation.html#leakage_finder',
                                                                               'tsai/data/validation.py'),
                                      'tsai.data.validation.plot_splits': ('data.validation.html#plot_splits', 'tsai/data/validation.py')},
            'tsai.export': { 'tsai.export._find_nb': ('export.html#_find_nb', 'tsai/export.py'),
                             'tsai.export._get_kernel_id': ('export.html#_get_kernel_id', 'tsai/export.py'),
                             'tsai.export._get_sessions': ('export.html#_get_sessions', 'tsai/export.py'),
                             'tsai.export._get_unhidden_cells': ('export.html#_get_unhidden_cells', 'tsai/export.py'),
                             'tsai.export._list_maybe_running_servers': ('export.html#_list_maybe_running_servers', 'tsai/export.py'),
                             'tsai.export._mk_flag_re': ('export.html#_mk_flag_re', 'tsai/export.py'),
                             'tsai.export.get_colab_nb_name': ('export.html#get_colab_nb_name', 'tsai/export.py'),
                             'tsai.export.get_nb_name': ('export.html#get_nb_name', 'tsai/export.py'),
                             'tsai.export.get_nb_path': ('export.html#get_nb_path', 'tsai/export.py'),
                             'tsai.export.get_script_path': ('export.html#get_script_path', 'tsai/export.py'),
                             'tsai.export.nb2py': ('export.html#nb2py', 'tsai/export.py'),
                             'tsai.export.nb_name_to_py': ('export.html#nb_name_to_py', 'tsai/export.py')},
            'tsai.imports': {},
            'tsai.index': {},
            'tsai.inference': {'tsai.inference.Learner.get_X_preds': ('inference.html#learner.get_x_preds', 'tsai/inference.py')},
            'tsai.learner': { 'tsai.learner.Learner.decoder': ('learner.html#learner.decoder', 'tsai/learner.py'),
                              'tsai.learner.Learner.one_batch': ('learner.html#learner.one_batch', 'tsai/learner.py'),
                              'tsai.learner.Learner.plot_metrics': ('learner.html#learner.plot_metrics', 'tsai/learner.py'),
                              'tsai.learner.Learner.remove_all_cbs': ('learner.html#learner.remove_all_cbs', 'tsai/learner.py'),
                              'tsai.learner.Learner.save_all': ('learner.html#learner.save_all', 'tsai/learner.py'),
                              'tsai.learner.Learner.show_batch': ('learner.html#learner.show_batch', 'tsai/learner.py'),
                              'tsai.learner.Recorder.plot_metrics': ('learner.html#recorder.plot_metrics', 'tsai/learner.py'),
                              'tsai.learner.get_arch': ('learner.html#get_arch', 'tsai/learner.py'),
                              'tsai.learner.load_all': ('learner.html#load_all', 'tsai/learner.py'),
                              'tsai.learner.ts_learner': ('learner.html#ts_learner', 'tsai/learner.py'),
                              'tsai.learner.tsimage_learner': ('learner.html#tsimage_learner', 'tsai/learner.py')},
            'tsai.losses': { 'tsai.losses.CenterLoss': ('losses.html#centerloss', 'tsai/losses.py'),
                             'tsai.losses.CenterLoss.__init__': ('losses.html#centerloss.__init__', 'tsai/losses.py'),
                             'tsai.losses.CenterLoss.forward': ('losses.html#centerloss.forward', 'tsai/losses.py'),
                             'tsai.losses.CenterPlusLoss': ('losses.html#centerplusloss', 'tsai/losses.py'),
                             'tsai.losses.CenterPlusLoss.__init__': ('losses.html#centerplusloss.__init__', 'tsai/losses.py'),
                             'tsai.losses.CenterPlusLoss.__repr__': ('losses.html#centerplusloss.__repr__', 'tsai/losses.py'),
                             'tsai.losses.CenterPlusLoss.forward': ('losses.html#centerplusloss.forward', 'tsai/losses.py'),
                             'tsai.losses.FocalLoss': ('losses.html#focalloss', 'tsai/losses.py'),
                             'tsai.losses.FocalLoss.__init__': ('losses.html#focalloss.__init__', 'tsai/losses.py'),
                             'tsai.losses.FocalLoss.forward': ('losses.html#focalloss.forward', 'tsai/losses.py'),
                             'tsai.losses.HuberLoss': ('losses.html#huberloss', 'tsai/losses.py'),
                             'tsai.losses.HuberLoss.__init__': ('losses.html#huberloss.__init__', 'tsai/losses.py'),
                             'tsai.losses.HuberLoss.forward': ('losses.html#huberloss.forward', 'tsai/losses.py'),
                             'tsai.losses.LogCoshLoss': ('losses.html#logcoshloss', 'tsai/losses.py'),
                             'tsai.losses.LogCoshLoss.__init__': ('losses.html#logcoshloss.__init__', 'tsai/losses.py'),
                             'tsai.losses.LogCoshLoss.forward': ('losses.html#logcoshloss.forward', 'tsai/losses.py'),
                             'tsai.losses.MaskedLossWrapper': ('losses.html#maskedlosswrapper', 'tsai/losses.py'),
                             'tsai.losses.MaskedLossWrapper.__init__': ('losses.html#maskedlosswrapper.__init__', 'tsai/losses.py'),
                             'tsai.losses.MaskedLossWrapper.forward': ('losses.html#maskedlosswrapper.forward', 'tsai/losses.py'),
                             'tsai.losses.TweedieLoss': ('losses.html#tweedieloss', 'tsai/losses.py'),
                             'tsai.losses.TweedieLoss.__init__': ('losses.html#tweedieloss.__init__', 'tsai/losses.py'),
                             'tsai.losses.TweedieLoss.forward': ('losses.html#tweedieloss.forward', 'tsai/losses.py')},
            'tsai.metrics': { 'tsai.metrics.F1_multi': ('metrics.html#f1_multi', 'tsai/metrics.py'),
                              'tsai.metrics.Fbeta_multi': ('metrics.html#fbeta_multi', 'tsai/metrics.py'),
                              'tsai.metrics.MatthewsCorrCoefBinary': ('metrics.html#matthewscorrcoefbinary', 'tsai/metrics.py'),
                              'tsai.metrics._lift': ('metrics.html#_lift', 'tsai/metrics.py'),
                              'tsai.metrics._lift_at_specificity': ('metrics.html#_lift_at_specificity', 'tsai/metrics.py'),
                              'tsai.metrics._mean_per_class_accuracy': ('metrics.html#_mean_per_class_accuracy', 'tsai/metrics.py'),
                              'tsai.metrics._recall_at_specificity': ('metrics.html#_recall_at_specificity', 'tsai/metrics.py'),
                              'tsai.metrics._top_k_lift': ('metrics.html#_top_k_lift', 'tsai/metrics.py'),
                              'tsai.metrics.accuracy_multi': ('metrics.html#accuracy_multi', 'tsai/metrics.py'),
                              'tsai.metrics.balanced_accuracy_multi': ('metrics.html#balanced_accuracy_multi', 'tsai/metrics.py'),
                              'tsai.metrics.get_task_metrics': ('metrics.html#get_task_metrics', 'tsai/metrics.py'),
                              'tsai.metrics.mae': ('metrics.html#mae', 'tsai/metrics.py'),
                              'tsai.metrics.mape': ('metrics.html#mape', 'tsai/metrics.py'),
                              'tsai.metrics.metrics_multi_common': ('metrics.html#metrics_multi_common', 'tsai/metrics.py'),
                              'tsai.metrics.precision_multi': ('metrics.html#precision_multi', 'tsai/metrics.py'),
                              'tsai.metrics.recall_multi': ('metrics.html#recall_multi', 'tsai/metrics.py'),
                              'tsai.metrics.specificity_multi': ('metrics.html#specificity_multi', 'tsai/metrics.py')},
            'tsai.models.FCN': { 'tsai.models.FCN.FCN': ('models.fcn.html#fcn', 'tsai/models/FCN.py'),
                                 'tsai.models.FCN.FCN.__init__': ('models.fcn.html#fcn.__init__', 'tsai/models/FCN.py'),
                                 'tsai.models.FCN.FCN.forward': ('models.fcn.html#fcn.forward', 'tsai/models/FCN.py')},
            'tsai.models.FCNPlus': { 'tsai.models.FCNPlus.FCNPlus': ('models.fcnplus.html#fcnplus', 'tsai/models/FCNPlus.py'),
                                     'tsai.models.FCNPlus.FCNPlus.__init__': ( 'models.fcnplus.html#fcnplus.__init__',
                                                                               'tsai/models/FCNPlus.py'),
                                     'tsai.models.FCNPlus._FCNBlockPlus': ('models.fcnplus.html#_fcnblockplus', 'tsai/models/FCNPlus.py'),
                                     'tsai.models.FCNPlus._FCNBlockPlus.__init__': ( 'models.fcnplus.html#_fcnblockplus.__init__',
                                                                                     'tsai/models/FCNPlus.py'),
                                     'tsai.models.FCNPlus._FCNBlockPlus.forward': ( 'models.fcnplus.html#_fcnblockplus.forward',
                                                                                    'tsai/models/FCNPlus.py')},
            'tsai.models.GatedTabTransformer': { 'tsai.models.GatedTabTransformer.GatedTabTransformer': ( 'models.gatedtabtransformer.html#gatedtabtransformer',
                                                                                                          'tsai/models/GatedTabTransformer.py'),
                                                 'tsai.models.GatedTabTransformer.GatedTabTransformer.__init__': ( 'models.gatedtabtransformer.html#gatedtabtransformer.__init__',
                                                                                                                   'tsai/models/GatedTabTransformer.py'),
                                                 'tsai.models.GatedTabTransformer._TabMLP': ( 'models.gatedtabtransformer.html#_tabmlp',
                                                                                              'tsai/models/GatedTabTransformer.py'),
                                                 'tsai.models.GatedTabTransformer._TabMLP.__init__': ( 'models.gatedtabtransformer.html#_tabmlp.__init__',
                                                                                                       'tsai/models/GatedTabTransformer.py'),
                                                 'tsai.models.GatedTabTransformer._TabMLP.forward': ( 'models.gatedtabtransformer.html#_tabmlp.forward',
                                                                                                      'tsai/models/GatedTabTransformer.py')},
            'tsai.models.InceptionTime': { 'tsai.models.InceptionTime.InceptionBlock': ( 'models.inceptiontime.html#inceptionblock',
                                                                                         'tsai/models/InceptionTime.py'),
                                           'tsai.models.InceptionTime.InceptionBlock.__init__': ( 'models.inceptiontime.html#inceptionblock.__init__',
                                                                                                  'tsai/models/InceptionTime.py'),
                                           'tsai.models.InceptionTime.InceptionBlock.forward': ( 'models.inceptiontime.html#inceptionblock.forward',
                                                                                                 'tsai/models/InceptionTime.py'),
                                           'tsai.models.InceptionTime.InceptionModule': ( 'models.inceptiontime.html#inceptionmodule',
                                                                                          'tsai/models/InceptionTime.py'),
                                           'tsai.models.InceptionTime.InceptionModule.__init__': ( 'models.inceptiontime.html#inceptionmodule.__init__',
                                                                                                   'tsai/models/InceptionTime.py'),
                                           'tsai.models.InceptionTime.InceptionModule.forward': ( 'models.inceptiontime.html#inceptionmodule.forward',
                                                                                                  'tsai/models/InceptionTime.py'),
                                           'tsai.models.InceptionTime.InceptionTime': ( 'models.inceptiontime.html#inceptiontime',
                                                                                        'tsai/models/InceptionTime.py'),
                                           'tsai.models.InceptionTime.InceptionTime.__init__': ( 'models.inceptiontime.html#inceptiontime.__init__',
                                                                                                 'tsai/models/InceptionTime.py'),
                                           'tsai.models.InceptionTime.InceptionTime.forward': ( 'models.inceptiontime.html#inceptiontime.forward',
                                                                                                'tsai/models/InceptionTime.py')},
            'tsai.models.InceptionTimePlus': { 'tsai.models.InceptionTimePlus.InCoordTime': ( 'models.inceptiontimeplus.html#incoordtime',
                                                                                              'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InCoordTime.__init__': ( 'models.inceptiontimeplus.html#incoordtime.__init__',
                                                                                                       'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionBlockPlus': ( 'models.inceptiontimeplus.html#inceptionblockplus',
                                                                                                     'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionBlockPlus.__init__': ( 'models.inceptiontimeplus.html#inceptionblockplus.__init__',
                                                                                                              'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionBlockPlus.forward': ( 'models.inceptiontimeplus.html#inceptionblockplus.forward',
                                                                                                             'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionModulePlus': ( 'models.inceptiontimeplus.html#inceptionmoduleplus',
                                                                                                      'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionModulePlus.__init__': ( 'models.inceptiontimeplus.html#inceptionmoduleplus.__init__',
                                                                                                               'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionModulePlus._init_cnn': ( 'models.inceptiontimeplus.html#inceptionmoduleplus._init_cnn',
                                                                                                                'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionModulePlus.forward': ( 'models.inceptiontimeplus.html#inceptionmoduleplus.forward',
                                                                                                              'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionTimePlus': ( 'models.inceptiontimeplus.html#inceptiontimeplus',
                                                                                                    'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionTimePlus.__init__': ( 'models.inceptiontimeplus.html#inceptiontimeplus.__init__',
                                                                                                             'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.InceptionTimePlus.create_head': ( 'models.inceptiontimeplus.html#inceptiontimeplus.create_head',
                                                                                                                'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.MultiInceptionTimePlus': ( 'models.inceptiontimeplus.html#multiinceptiontimeplus',
                                                                                                         'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.MultiInceptionTimePlus.__init__': ( 'models.inceptiontimeplus.html#multiinceptiontimeplus.__init__',
                                                                                                                  'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.XCoordTime': ( 'models.inceptiontimeplus.html#xcoordtime',
                                                                                             'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus.XCoordTime.__init__': ( 'models.inceptiontimeplus.html#xcoordtime.__init__',
                                                                                                      'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus._Splitter': ( 'models.inceptiontimeplus.html#_splitter',
                                                                                            'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus._Splitter.__init__': ( 'models.inceptiontimeplus.html#_splitter.__init__',
                                                                                                     'tsai/models/InceptionTimePlus.py'),
                                               'tsai.models.InceptionTimePlus._Splitter.forward': ( 'models.inceptiontimeplus.html#_splitter.forward',
                                                                                                    'tsai/models/InceptionTimePlus.py')},
            'tsai.models.MINIROCKET': { 'tsai.models.MINIROCKET.MiniRocketClassifier': ( 'models.minirocket.html#minirocketclassifier',
                                                                                         'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketClassifier.__init__': ( 'models.minirocket.html#minirocketclassifier.__init__',
                                                                                                  'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketClassifier.__repr__': ( 'models.minirocket.html#minirocketclassifier.__repr__',
                                                                                                  'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketClassifier.save': ( 'models.minirocket.html#minirocketclassifier.save',
                                                                                              'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketRegressor': ( 'models.minirocket.html#minirocketregressor',
                                                                                        'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketRegressor.__init__': ( 'models.minirocket.html#minirocketregressor.__init__',
                                                                                                 'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketRegressor.__repr__': ( 'models.minirocket.html#minirocketregressor.__repr__',
                                                                                                 'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketRegressor.save': ( 'models.minirocket.html#minirocketregressor.save',
                                                                                             'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketVotingClassifier': ( 'models.minirocket.html#minirocketvotingclassifier',
                                                                                               'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketVotingClassifier.__init__': ( 'models.minirocket.html#minirocketvotingclassifier.__init__',
                                                                                                        'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketVotingClassifier.__repr__': ( 'models.minirocket.html#minirocketvotingclassifier.__repr__',
                                                                                                        'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketVotingClassifier.save': ( 'models.minirocket.html#minirocketvotingclassifier.save',
                                                                                                    'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketVotingRegressor': ( 'models.minirocket.html#minirocketvotingregressor',
                                                                                              'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketVotingRegressor.__init__': ( 'models.minirocket.html#minirocketvotingregressor.__init__',
                                                                                                       'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketVotingRegressor.__repr__': ( 'models.minirocket.html#minirocketvotingregressor.__repr__',
                                                                                                       'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.MiniRocketVotingRegressor.save': ( 'models.minirocket.html#minirocketvotingregressor.save',
                                                                                                   'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.get_minirocket_preds': ( 'models.minirocket.html#get_minirocket_preds',
                                                                                         'tsai/models/MINIROCKET.py'),
                                        'tsai.models.MINIROCKET.load_minirocket': ( 'models.minirocket.html#load_minirocket',
                                                                                    'tsai/models/MINIROCKET.py')},
            'tsai.models.MINIROCKETPlus_Pytorch': { 'tsai.models.MINIROCKETPlus_Pytorch.Flatten': ( 'models.minirocketplus_pytorch.html#flatten',
                                                                                                    'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.Flatten.forward': ( 'models.minirocketplus_pytorch.html#flatten.forward',
                                                                                                            'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.InceptionRocketFeaturesPlus': ( 'models.minirocketplus_pytorch.html#inceptionrocketfeaturesplus',
                                                                                                                        'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.InceptionRocketFeaturesPlus.__init__': ( 'models.minirocketplus_pytorch.html#inceptionrocketfeaturesplus.__init__',
                                                                                                                                 'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.InceptionRocketFeaturesPlus._get_n_comb': ( 'models.minirocketplus_pytorch.html#inceptionrocketfeaturesplus._get_n_comb',
                                                                                                                                    'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.InceptionRocketFeaturesPlus._get_n_feat_per_ks': ( 'models.minirocketplus_pytorch.html#inceptionrocketfeaturesplus._get_n_feat_per_ks',
                                                                                                                                           'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.InceptionRocketFeaturesPlus.fit': ( 'models.minirocketplus_pytorch.html#inceptionrocketfeaturesplus.fit',
                                                                                                                            'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.InceptionRocketFeaturesPlus.forward': ( 'models.minirocketplus_pytorch.html#inceptionrocketfeaturesplus.forward',
                                                                                                                                'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.InceptionRocketPlus': ( 'models.minirocketplus_pytorch.html#inceptionrocketplus',
                                                                                                                'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.InceptionRocketPlus.__init__': ( 'models.minirocketplus_pytorch.html#inceptionrocketplus.__init__',
                                                                                                                         'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus',
                                                                                                                   'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.__init__': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.__init__',
                                                                                                                            'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.fit': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.fit',
                                                                                                                       'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.forward': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.forward',
                                                                                                                           'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.get_PPVs': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.get_ppvs',
                                                                                                                            'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.get_bias': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.get_bias',
                                                                                                                            'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.get_indices': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.get_indices',
                                                                                                                               'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.get_quantiles': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.get_quantiles',
                                                                                                                                 'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.set_channel_combinations': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.set_channel_combinations',
                                                                                                                                            'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketFeaturesPlus.set_dilations': ( 'models.minirocketplus_pytorch.html#minirocketfeaturesplus.set_dilations',
                                                                                                                                 'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketHead': ( 'models.minirocketplus_pytorch.html#minirockethead',
                                                                                                           'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketHead.__init__': ( 'models.minirocketplus_pytorch.html#minirockethead.__init__',
                                                                                                                    'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketPlus': ( 'models.minirocketplus_pytorch.html#minirocketplus',
                                                                                                           'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.MiniRocketPlus.__init__': ( 'models.minirocketplus_pytorch.html#minirocketplus.__init__',
                                                                                                                    'tsai/models/MINIROCKETPlus_Pytorch.py'),
                                                    'tsai.models.MINIROCKETPlus_Pytorch.get_minirocket_features': ( 'models.minirocketplus_pytorch.html#get_minirocket_features',
                                                                                                                    'tsai/models/MINIROCKETPlus_Pytorch.py')},
            'tsai.models.MINIROCKET_Pytorch': { 'tsai.models.MINIROCKET_Pytorch.MiniRocket': ( 'models.minirocket_pytorch.html#minirocket',
                                                                                               'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocket.__init__': ( 'models.minirocket_pytorch.html#minirocket.__init__',
                                                                                                        'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocket.fit': ( 'models.minirocket_pytorch.html#minirocket.fit',
                                                                                                   'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures': ( 'models.minirocket_pytorch.html#minirocketfeatures',
                                                                                                       'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures.__init__': ( 'models.minirocket_pytorch.html#minirocketfeatures.__init__',
                                                                                                                'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures._get_PPVs': ( 'models.minirocket_pytorch.html#minirocketfeatures._get_ppvs',
                                                                                                                 'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures._get_bias': ( 'models.minirocket_pytorch.html#minirocketfeatures._get_bias',
                                                                                                                 'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures._get_quantiles': ( 'models.minirocket_pytorch.html#minirocketfeatures._get_quantiles',
                                                                                                                      'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures._set_channel_combinations': ( 'models.minirocket_pytorch.html#minirocketfeatures._set_channel_combinations',
                                                                                                                                 'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures._set_dilations': ( 'models.minirocket_pytorch.html#minirocketfeatures._set_dilations',
                                                                                                                      'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures.fit': ( 'models.minirocket_pytorch.html#minirocketfeatures.fit',
                                                                                                           'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketFeatures.forward': ( 'models.minirocket_pytorch.html#minirocketfeatures.forward',
                                                                                                               'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketHead': ( 'models.minirocket_pytorch.html#minirockethead',
                                                                                                   'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.MiniRocketHead.__init__': ( 'models.minirocket_pytorch.html#minirockethead.__init__',
                                                                                                            'tsai/models/MINIROCKET_Pytorch.py'),
                                                'tsai.models.MINIROCKET_Pytorch.get_minirocket_features': ( 'models.minirocket_pytorch.html#get_minirocket_features',
                                                                                                            'tsai/models/MINIROCKET_Pytorch.py')},
            'tsai.models.MLP': { 'tsai.models.MLP.MLP': ('models.mlp.html#mlp', 'tsai/models/MLP.py'),
                                 'tsai.models.MLP.MLP.__init__': ('models.mlp.html#mlp.__init__', 'tsai/models/MLP.py'),
                                 'tsai.models.MLP.MLP.forward': ('models.mlp.html#mlp.forward', 'tsai/models/MLP.py')},
            'tsai.models.MultiInputNet': { 'tsai.models.MultiInputNet.MultiInputNet': ( 'models.multiinputnet.html#multiinputnet',
                                                                                        'tsai/models/MultiInputNet.py'),
                                           'tsai.models.MultiInputNet.MultiInputNet.__init__': ( 'models.multiinputnet.html#multiinputnet.__init__',
                                                                                                 'tsai/models/MultiInputNet.py'),
                                           'tsai.models.MultiInputNet.MultiInputNet.forward': ( 'models.multiinputnet.html#multiinputnet.forward',
                                                                                                'tsai/models/MultiInputNet.py')},
            'tsai.models.OmniScaleCNN': { 'tsai.models.OmniScaleCNN.OmniScaleCNN': ( 'models.omniscalecnn.html#omniscalecnn',
                                                                                     'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.OmniScaleCNN.__init__': ( 'models.omniscalecnn.html#omniscalecnn.__init__',
                                                                                              'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.OmniScaleCNN.forward': ( 'models.omniscalecnn.html#omniscalecnn.forward',
                                                                                             'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.SampaddingConv1D_BN': ( 'models.omniscalecnn.html#sampaddingconv1d_bn',
                                                                                            'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.SampaddingConv1D_BN.__init__': ( 'models.omniscalecnn.html#sampaddingconv1d_bn.__init__',
                                                                                                     'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.SampaddingConv1D_BN.forward': ( 'models.omniscalecnn.html#sampaddingconv1d_bn.forward',
                                                                                                    'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.build_layer_with_layer_parameter': ( 'models.omniscalecnn.html#build_layer_with_layer_parameter',
                                                                                                         'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.build_layer_with_layer_parameter.__init__': ( 'models.omniscalecnn.html#build_layer_with_layer_parameter.__init__',
                                                                                                                  'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.build_layer_with_layer_parameter.forward': ( 'models.omniscalecnn.html#build_layer_with_layer_parameter.forward',
                                                                                                                 'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.generate_layer_parameter_list': ( 'models.omniscalecnn.html#generate_layer_parameter_list',
                                                                                                      'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.get_Prime_number_in_a_range': ( 'models.omniscalecnn.html#get_prime_number_in_a_range',
                                                                                                    'tsai/models/OmniScaleCNN.py'),
                                          'tsai.models.OmniScaleCNN.get_out_channel_number': ( 'models.omniscalecnn.html#get_out_channel_number',
                                                                                               'tsai/models/OmniScaleCNN.py')},
            'tsai.models.PatchTST': { 'tsai.models.PatchTST.Flatten_Head': ('models.patchtst.html#flatten_head', 'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.Flatten_Head.__init__': ( 'models.patchtst.html#flatten_head.__init__',
                                                                                      'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.Flatten_Head.forward': ( 'models.patchtst.html#flatten_head.forward',
                                                                                     'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.MovingAverage': ( 'models.patchtst.html#movingaverage',
                                                                              'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.MovingAverage.__init__': ( 'models.patchtst.html#movingaverage.__init__',
                                                                                       'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.MovingAverage.forward': ( 'models.patchtst.html#movingaverage.forward',
                                                                                      'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.PatchTST': ('models.patchtst.html#patchtst', 'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.PatchTST.__init__': ( 'models.patchtst.html#patchtst.__init__',
                                                                                  'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.PatchTST.forward': ( 'models.patchtst.html#patchtst.forward',
                                                                                 'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.SeriesDecomposition': ( 'models.patchtst.html#seriesdecomposition',
                                                                                    'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.SeriesDecomposition.__init__': ( 'models.patchtst.html#seriesdecomposition.__init__',
                                                                                             'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST.SeriesDecomposition.forward': ( 'models.patchtst.html#seriesdecomposition.forward',
                                                                                            'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._MultiheadAttention': ( 'models.patchtst.html#_multiheadattention',
                                                                                    'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._MultiheadAttention.__init__': ( 'models.patchtst.html#_multiheadattention.__init__',
                                                                                             'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._MultiheadAttention.forward': ( 'models.patchtst.html#_multiheadattention.forward',
                                                                                            'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._PatchTST_backbone': ( 'models.patchtst.html#_patchtst_backbone',
                                                                                   'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._PatchTST_backbone.__init__': ( 'models.patchtst.html#_patchtst_backbone.__init__',
                                                                                            'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._PatchTST_backbone.forward': ( 'models.patchtst.html#_patchtst_backbone.forward',
                                                                                           'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._ScaledDotProductAttention': ( 'models.patchtst.html#_scaleddotproductattention',
                                                                                           'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._ScaledDotProductAttention.__init__': ( 'models.patchtst.html#_scaleddotproductattention.__init__',
                                                                                                    'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._ScaledDotProductAttention.forward': ( 'models.patchtst.html#_scaleddotproductattention.forward',
                                                                                                   'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._TSTiEncoder': ('models.patchtst.html#_tstiencoder', 'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._TSTiEncoder.__init__': ( 'models.patchtst.html#_tstiencoder.__init__',
                                                                                      'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._TSTiEncoder.forward': ( 'models.patchtst.html#_tstiencoder.forward',
                                                                                     'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._TSTiEncoderLayer': ( 'models.patchtst.html#_tstiencoderlayer',
                                                                                  'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._TSTiEncoderLayer.__init__': ( 'models.patchtst.html#_tstiencoderlayer.__init__',
                                                                                           'tsai/models/PatchTST.py'),
                                      'tsai.models.PatchTST._TSTiEncoderLayer.forward': ( 'models.patchtst.html#_tstiencoderlayer.forward',
                                                                                          'tsai/models/PatchTST.py')},
            'tsai.models.RNN': { 'tsai.models.RNN.GRU': ('models.rnn.html#gru', 'tsai/models/RNN.py'),
                                 'tsai.models.RNN.LSTM': ('models.rnn.html#lstm', 'tsai/models/RNN.py'),
                                 'tsai.models.RNN.RNN': ('models.rnn.html#rnn', 'tsai/models/RNN.py'),
                                 'tsai.models.RNN._RNN_Base': ('models.rnn.html#_rnn_base', 'tsai/models/RNN.py'),
                                 'tsai.models.RNN._RNN_Base.__init__': ('models.rnn.html#_rnn_base.__init__', 'tsai/models/RNN.py'),
                                 'tsai.models.RNN._RNN_Base._weights_init': ( 'models.rnn.html#_rnn_base._weights_init',
                                                                              'tsai/models/RNN.py'),
                                 'tsai.models.RNN._RNN_Base.forward': ('models.rnn.html#_rnn_base.forward', 'tsai/models/RNN.py')},
            'tsai.models.RNNAttention': { 'tsai.models.RNNAttention.GRUAttention': ( 'models.rnnattention.html#gruattention',
                                                                                     'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention.LSTMAttention': ( 'models.rnnattention.html#lstmattention',
                                                                                      'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention.RNNAttention': ( 'models.rnnattention.html#rnnattention',
                                                                                     'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._MultiHeadAttention': ( 'models.rnnattention.html#_multiheadattention',
                                                                                            'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._MultiHeadAttention.__init__': ( 'models.rnnattention.html#_multiheadattention.__init__',
                                                                                                     'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._MultiHeadAttention.forward': ( 'models.rnnattention.html#_multiheadattention.forward',
                                                                                                    'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._RNNAttention_Base': ( 'models.rnnattention.html#_rnnattention_base',
                                                                                           'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._RNNAttention_Base.__init__': ( 'models.rnnattention.html#_rnnattention_base.__init__',
                                                                                                    'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._RNNAttention_Base.create_head': ( 'models.rnnattention.html#_rnnattention_base.create_head',
                                                                                                       'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._RNNAttention_Base.forward': ( 'models.rnnattention.html#_rnnattention_base.forward',
                                                                                                   'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._ScaledDotProductAttention': ( 'models.rnnattention.html#_scaleddotproductattention',
                                                                                                   'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._ScaledDotProductAttention.__init__': ( 'models.rnnattention.html#_scaleddotproductattention.__init__',
                                                                                                            'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._ScaledDotProductAttention.forward': ( 'models.rnnattention.html#_scaleddotproductattention.forward',
                                                                                                           'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._TSTEncoder': ( 'models.rnnattention.html#_tstencoder',
                                                                                    'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._TSTEncoder.__init__': ( 'models.rnnattention.html#_tstencoder.__init__',
                                                                                             'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._TSTEncoder.forward': ( 'models.rnnattention.html#_tstencoder.forward',
                                                                                            'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._TSTEncoderLayer': ( 'models.rnnattention.html#_tstencoderlayer',
                                                                                         'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._TSTEncoderLayer.__init__': ( 'models.rnnattention.html#_tstencoderlayer.__init__',
                                                                                                  'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention._TSTEncoderLayer.forward': ( 'models.rnnattention.html#_tstencoderlayer.forward',
                                                                                                 'tsai/models/RNNAttention.py'),
                                          'tsai.models.RNNAttention.get_activation_fn': ( 'models.rnnattention.html#get_activation_fn',
                                                                                          'tsai/models/RNNAttention.py')},
            'tsai.models.RNNPlus': { 'tsai.models.RNNPlus.GRUPlus': ('models.rnnplus.html#gruplus', 'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus.LSTMPlus': ('models.rnnplus.html#lstmplus', 'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus.RNNPlus': ('models.rnnplus.html#rnnplus', 'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus._RNNPlus_Base': ('models.rnnplus.html#_rnnplus_base', 'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus._RNNPlus_Base.__init__': ( 'models.rnnplus.html#_rnnplus_base.__init__',
                                                                                     'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus._RNNPlus_Base.create_head': ( 'models.rnnplus.html#_rnnplus_base.create_head',
                                                                                        'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus._RNN_Backbone': ('models.rnnplus.html#_rnn_backbone', 'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus._RNN_Backbone.__init__': ( 'models.rnnplus.html#_rnn_backbone.__init__',
                                                                                     'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus._RNN_Backbone._weights_init': ( 'models.rnnplus.html#_rnn_backbone._weights_init',
                                                                                          'tsai/models/RNNPlus.py'),
                                     'tsai.models.RNNPlus._RNN_Backbone.forward': ( 'models.rnnplus.html#_rnn_backbone.forward',
                                                                                    'tsai/models/RNNPlus.py')},
            'tsai.models.RNN_FCN': { 'tsai.models.RNN_FCN.GRU_FCN': ('models.rnn_fcn.html#gru_fcn', 'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN.LSTM_FCN': ('models.rnn_fcn.html#lstm_fcn', 'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN.MGRU_FCN': ('models.rnn_fcn.html#mgru_fcn', 'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN.MGRU_FCN.__init__': ( 'models.rnn_fcn.html#mgru_fcn.__init__',
                                                                                'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN.MLSTM_FCN': ('models.rnn_fcn.html#mlstm_fcn', 'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN.MLSTM_FCN.__init__': ( 'models.rnn_fcn.html#mlstm_fcn.__init__',
                                                                                 'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN.MRNN_FCN': ('models.rnn_fcn.html#mrnn_fcn', 'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN.MRNN_FCN.__init__': ( 'models.rnn_fcn.html#mrnn_fcn.__init__',
                                                                                'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN.RNN_FCN': ('models.rnn_fcn.html#rnn_fcn', 'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN._RNN_FCN_Base': ('models.rnn_fcn.html#_rnn_fcn_base', 'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN._RNN_FCN_Base.__init__': ( 'models.rnn_fcn.html#_rnn_fcn_base.__init__',
                                                                                     'tsai/models/RNN_FCN.py'),
                                     'tsai.models.RNN_FCN._RNN_FCN_Base.forward': ( 'models.rnn_fcn.html#_rnn_fcn_base.forward',
                                                                                    'tsai/models/RNN_FCN.py')},
            'tsai.models.RNN_FCNPlus': { 'tsai.models.RNN_FCNPlus.GRU_FCNPlus': ( 'models.rnn_fcnplus.html#gru_fcnplus',
                                                                                  'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus.LSTM_FCNPlus': ( 'models.rnn_fcnplus.html#lstm_fcnplus',
                                                                                   'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus.MGRU_FCNPlus': ( 'models.rnn_fcnplus.html#mgru_fcnplus',
                                                                                   'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus.MGRU_FCNPlus.__init__': ( 'models.rnn_fcnplus.html#mgru_fcnplus.__init__',
                                                                                            'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus.MLSTM_FCNPlus': ( 'models.rnn_fcnplus.html#mlstm_fcnplus',
                                                                                    'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus.MLSTM_FCNPlus.__init__': ( 'models.rnn_fcnplus.html#mlstm_fcnplus.__init__',
                                                                                             'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus.MRNN_FCNPlus': ( 'models.rnn_fcnplus.html#mrnn_fcnplus',
                                                                                   'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus.MRNN_FCNPlus.__init__': ( 'models.rnn_fcnplus.html#mrnn_fcnplus.__init__',
                                                                                            'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus.RNN_FCNPlus': ( 'models.rnn_fcnplus.html#rnn_fcnplus',
                                                                                  'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus._RNN_FCN_BasePlus': ( 'models.rnn_fcnplus.html#_rnn_fcn_baseplus',
                                                                                        'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus._RNN_FCN_BasePlus.__init__': ( 'models.rnn_fcnplus.html#_rnn_fcn_baseplus.__init__',
                                                                                                 'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus._RNN_FCN_Base_Backbone': ( 'models.rnn_fcnplus.html#_rnn_fcn_base_backbone',
                                                                                             'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus._RNN_FCN_Base_Backbone.__init__': ( 'models.rnn_fcnplus.html#_rnn_fcn_base_backbone.__init__',
                                                                                                      'tsai/models/RNN_FCNPlus.py'),
                                         'tsai.models.RNN_FCNPlus._RNN_FCN_Base_Backbone.forward': ( 'models.rnn_fcnplus.html#_rnn_fcn_base_backbone.forward',
                                                                                                     'tsai/models/RNN_FCNPlus.py')},
            'tsai.models.ROCKET': { 'tsai.models.ROCKET.RocketClassifier': ('models.rocket.html#rocketclassifier', 'tsai/models/ROCKET.py'),
                                    'tsai.models.ROCKET.RocketClassifier.__init__': ( 'models.rocket.html#rocketclassifier.__init__',
                                                                                      'tsai/models/ROCKET.py'),
                                    'tsai.models.ROCKET.RocketClassifier.__repr__': ( 'models.rocket.html#rocketclassifier.__repr__',
                                                                                      'tsai/models/ROCKET.py'),
                                    'tsai.models.ROCKET.RocketClassifier.save': ( 'models.rocket.html#rocketclassifier.save',
                                                                                  'tsai/models/ROCKET.py'),
                                    'tsai.models.ROCKET.RocketRegressor': ('models.rocket.html#rocketregressor', 'tsai/models/ROCKET.py'),
                                    'tsai.models.ROCKET.RocketRegressor.__init__': ( 'models.rocket.html#rocketregressor.__init__',
                                                                                     'tsai/models/ROCKET.py'),
                                    'tsai.models.ROCKET.RocketRegressor.__repr__': ( 'models.rocket.html#rocketregressor.__repr__',
                                                                                     'tsai/models/ROCKET.py'),
                                    'tsai.models.ROCKET.RocketRegressor.save': ( 'models.rocket.html#rocketregressor.save',
                                                                                 'tsai/models/ROCKET.py'),
                                    'tsai.models.ROCKET.load_rocket': ('models.rocket.html#load_rocket', 'tsai/models/ROCKET.py')},
            'tsai.models.ROCKET_Pytorch': { 'tsai.models.ROCKET_Pytorch.ROCKET': ( 'models.rocket_pytorch.html#rocket',
                                                                                   'tsai/models/ROCKET_Pytorch.py'),
                                            'tsai.models.ROCKET_Pytorch.ROCKET.__init__': ( 'models.rocket_pytorch.html#rocket.__init__',
                                                                                            'tsai/models/ROCKET_Pytorch.py'),
                                            'tsai.models.ROCKET_Pytorch.ROCKET.forward': ( 'models.rocket_pytorch.html#rocket.forward',
                                                                                           'tsai/models/ROCKET_Pytorch.py'),
                                            'tsai.models.ROCKET_Pytorch.create_rocket_features': ( 'models.rocket_pytorch.html#create_rocket_features',
                                                                                                   'tsai/models/ROCKET_Pytorch.py')},
            'tsai.models.ResCNN': { 'tsai.models.ResCNN.ResCNN': ('models.rescnn.html#rescnn', 'tsai/models/ResCNN.py'),
                                    'tsai.models.ResCNN.ResCNN.__init__': ('models.rescnn.html#rescnn.__init__', 'tsai/models/ResCNN.py'),
                                    'tsai.models.ResCNN.ResCNN.forward': ('models.rescnn.html#rescnn.forward', 'tsai/models/ResCNN.py'),
                                    'tsai.models.ResCNN._ResCNNBlock': ('models.rescnn.html#_rescnnblock', 'tsai/models/ResCNN.py'),
                                    'tsai.models.ResCNN._ResCNNBlock.__init__': ( 'models.rescnn.html#_rescnnblock.__init__',
                                                                                  'tsai/models/ResCNN.py'),
                                    'tsai.models.ResCNN._ResCNNBlock.forward': ( 'models.rescnn.html#_rescnnblock.forward',
                                                                                 'tsai/models/ResCNN.py')},
            'tsai.models.ResNet': { 'tsai.models.ResNet.ResBlock': ('models.resnet.html#resblock', 'tsai/models/ResNet.py'),
                                    'tsai.models.ResNet.ResBlock.__init__': ( 'models.resnet.html#resblock.__init__',
                                                                              'tsai/models/ResNet.py'),
                                    'tsai.models.ResNet.ResBlock.forward': ('models.resnet.html#resblock.forward', 'tsai/models/ResNet.py'),
                                    'tsai.models.ResNet.ResNet': ('models.resnet.html#resnet', 'tsai/models/ResNet.py'),
                                    'tsai.models.ResNet.ResNet.__init__': ('models.resnet.html#resnet.__init__', 'tsai/models/ResNet.py'),
                                    'tsai.models.ResNet.ResNet.forward': ('models.resnet.html#resnet.forward', 'tsai/models/ResNet.py')},
            'tsai.models.ResNetPlus': { 'tsai.models.ResNetPlus.ResBlockPlus': ( 'models.resnetplus.html#resblockplus',
                                                                                 'tsai/models/ResNetPlus.py'),
                                        'tsai.models.ResNetPlus.ResBlockPlus.__init__': ( 'models.resnetplus.html#resblockplus.__init__',
                                                                                          'tsai/models/ResNetPlus.py'),
                                        'tsai.models.ResNetPlus.ResBlockPlus._init_cnn': ( 'models.resnetplus.html#resblockplus._init_cnn',
                                                                                           'tsai/models/ResNetPlus.py'),
                                        'tsai.models.ResNetPlus.ResBlockPlus.forward': ( 'models.resnetplus.html#resblockplus.forward',
                                                                                         'tsai/models/ResNetPlus.py'),
                                        'tsai.models.ResNetPlus.ResNetPlus': ( 'models.resnetplus.html#resnetplus',
                                                                               'tsai/models/ResNetPlus.py'),
                                        'tsai.models.ResNetPlus.ResNetPlus.__init__': ( 'models.resnetplus.html#resnetplus.__init__',
                                                                                        'tsai/models/ResNetPlus.py'),
                                        'tsai.models.ResNetPlus.ResNetPlus.create_head': ( 'models.resnetplus.html#resnetplus.create_head',
                                                                                           'tsai/models/ResNetPlus.py')},
            'tsai.models.TCN': { 'tsai.models.TCN.TCN': ('models.tcn.html#tcn', 'tsai/models/TCN.py'),
                                 'tsai.models.TCN.TCN.__init__': ('models.tcn.html#tcn.__init__', 'tsai/models/TCN.py'),
                                 'tsai.models.TCN.TCN.forward': ('models.tcn.html#tcn.forward', 'tsai/models/TCN.py'),
                                 'tsai.models.TCN.TCN.init_weights': ('models.tcn.html#tcn.init_weights', 'tsai/models/TCN.py'),
                                 'tsai.models.TCN.TemporalBlock': ('models.tcn.html#temporalblock', 'tsai/models/TCN.py'),
                                 'tsai.models.TCN.TemporalBlock.__init__': ('models.tcn.html#temporalblock.__init__', 'tsai/models/TCN.py'),
                                 'tsai.models.TCN.TemporalBlock.forward': ('models.tcn.html#temporalblock.forward', 'tsai/models/TCN.py'),
                                 'tsai.models.TCN.TemporalBlock.init_weights': ( 'models.tcn.html#temporalblock.init_weights',
                                                                                 'tsai/models/TCN.py'),
                                 'tsai.models.TCN.TemporalConvNet': ('models.tcn.html#temporalconvnet', 'tsai/models/TCN.py')},
            'tsai.models.TSPerceiver': { 'tsai.models.TSPerceiver.Attention': ( 'models.tsperceiver.html#attention',
                                                                                'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.Attention.__init__': ( 'models.tsperceiver.html#attention.__init__',
                                                                                         'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.Attention.forward': ( 'models.tsperceiver.html#attention.forward',
                                                                                        'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.CrossAttention': ( 'models.tsperceiver.html#crossattention',
                                                                                     'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.CrossAttention.__init__': ( 'models.tsperceiver.html#crossattention.__init__',
                                                                                              'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.CrossAttention.forward': ( 'models.tsperceiver.html#crossattention.forward',
                                                                                             'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.FeedForward': ( 'models.tsperceiver.html#feedforward',
                                                                                  'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.FeedForward.__init__': ( 'models.tsperceiver.html#feedforward.__init__',
                                                                                           'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.GEGLU': ('models.tsperceiver.html#geglu', 'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.GEGLU.forward': ( 'models.tsperceiver.html#geglu.forward',
                                                                                    'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.LatentTransformer': ( 'models.tsperceiver.html#latenttransformer',
                                                                                        'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.LatentTransformer.__init__': ( 'models.tsperceiver.html#latenttransformer.__init__',
                                                                                                 'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.LatentTransformer.forward': ( 'models.tsperceiver.html#latenttransformer.forward',
                                                                                                'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.ScaledDotProductAttention': ( 'models.tsperceiver.html#scaleddotproductattention',
                                                                                                'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.ScaledDotProductAttention.__init__': ( 'models.tsperceiver.html#scaleddotproductattention.__init__',
                                                                                                         'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.ScaledDotProductAttention.forward': ( 'models.tsperceiver.html#scaleddotproductattention.forward',
                                                                                                        'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.TSPerceiver': ( 'models.tsperceiver.html#tsperceiver',
                                                                                  'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.TSPerceiver.__init__': ( 'models.tsperceiver.html#tsperceiver.__init__',
                                                                                           'tsai/models/TSPerceiver.py'),
                                         'tsai.models.TSPerceiver.TSPerceiver.forward': ( 'models.tsperceiver.html#tsperceiver.forward',
                                                                                          'tsai/models/TSPerceiver.py')},
            'tsai.models.TSSequencerPlus': { 'tsai.models.TSSequencerPlus.TSSequencerPlus': ( 'models.tssequencerplus.html#tssequencerplus',
                                                                                              'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus.TSSequencerPlus.__init__': ( 'models.tssequencerplus.html#tssequencerplus.__init__',
                                                                                                       'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerBackbone': ( 'models.tssequencerplus.html#_tssequencerbackbone',
                                                                                                   'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerBackbone.__init__': ( 'models.tssequencerplus.html#_tssequencerbackbone.__init__',
                                                                                                            'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerBackbone.forward': ( 'models.tssequencerplus.html#_tssequencerbackbone.forward',
                                                                                                           'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerEncoder': ( 'models.tssequencerplus.html#_tssequencerencoder',
                                                                                                  'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerEncoder.__init__': ( 'models.tssequencerplus.html#_tssequencerencoder.__init__',
                                                                                                           'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerEncoder.forward': ( 'models.tssequencerplus.html#_tssequencerencoder.forward',
                                                                                                          'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerEncoderLayer': ( 'models.tssequencerplus.html#_tssequencerencoderlayer',
                                                                                                       'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerEncoderLayer.__init__': ( 'models.tssequencerplus.html#_tssequencerencoderlayer.__init__',
                                                                                                                'tsai/models/TSSequencerPlus.py'),
                                             'tsai.models.TSSequencerPlus._TSSequencerEncoderLayer.forward': ( 'models.tssequencerplus.html#_tssequencerencoderlayer.forward',
                                                                                                               'tsai/models/TSSequencerPlus.py')},
            'tsai.models.TST': { 'tsai.models.TST.TST': ('models.tst.html#tst', 'tsai/models/TST.py'),
                                 'tsai.models.TST.TST.__init__': ('models.tst.html#tst.__init__', 'tsai/models/TST.py'),
                                 'tsai.models.TST.TST.create_head': ('models.tst.html#tst.create_head', 'tsai/models/TST.py'),
                                 'tsai.models.TST.TST.forward': ('models.tst.html#tst.forward', 'tsai/models/TST.py'),
                                 'tsai.models.TST._MultiHeadAttention': ('models.tst.html#_multiheadattention', 'tsai/models/TST.py'),
                                 'tsai.models.TST._MultiHeadAttention.__init__': ( 'models.tst.html#_multiheadattention.__init__',
                                                                                   'tsai/models/TST.py'),
                                 'tsai.models.TST._MultiHeadAttention.forward': ( 'models.tst.html#_multiheadattention.forward',
                                                                                  'tsai/models/TST.py'),
                                 'tsai.models.TST._ScaledDotProductAttention': ( 'models.tst.html#_scaleddotproductattention',
                                                                                 'tsai/models/TST.py'),
                                 'tsai.models.TST._ScaledDotProductAttention.__init__': ( 'models.tst.html#_scaleddotproductattention.__init__',
                                                                                          'tsai/models/TST.py'),
                                 'tsai.models.TST._ScaledDotProductAttention.forward': ( 'models.tst.html#_scaleddotproductattention.forward',
                                                                                         'tsai/models/TST.py'),
                                 'tsai.models.TST._TSTEncoder': ('models.tst.html#_tstencoder', 'tsai/models/TST.py'),
                                 'tsai.models.TST._TSTEncoder.__init__': ('models.tst.html#_tstencoder.__init__', 'tsai/models/TST.py'),
                                 'tsai.models.TST._TSTEncoder.forward': ('models.tst.html#_tstencoder.forward', 'tsai/models/TST.py'),
                                 'tsai.models.TST._TSTEncoderLayer': ('models.tst.html#_tstencoderlayer', 'tsai/models/TST.py'),
                                 'tsai.models.TST._TSTEncoderLayer.__init__': ( 'models.tst.html#_tstencoderlayer.__init__',
                                                                                'tsai/models/TST.py'),
                                 'tsai.models.TST._TSTEncoderLayer.forward': ( 'models.tst.html#_tstencoderlayer.forward',
                                                                               'tsai/models/TST.py'),
                                 'tsai.models.TST.get_activation_fn': ('models.tst.html#get_activation_fn', 'tsai/models/TST.py')},
            'tsai.models.TSTPlus': { 'tsai.models.TSTPlus.MultiTSTPlus': ('models.tstplus.html#multitstplus', 'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus.MultiTSTPlus.__init__': ( 'models.tstplus.html#multitstplus.__init__',
                                                                                    'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus.TSTPlus': ('models.tstplus.html#tstplus', 'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus.TSTPlus.__init__': ( 'models.tstplus.html#tstplus.__init__',
                                                                               'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus.TSTPlus.create_head': ( 'models.tstplus.html#tstplus.create_head',
                                                                                  'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus.TSTPlus.show_pe': ( 'models.tstplus.html#tstplus.show_pe',
                                                                              'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._Splitter': ('models.tstplus.html#_splitter', 'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._Splitter.__init__': ( 'models.tstplus.html#_splitter.__init__',
                                                                                 'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._Splitter.forward': ( 'models.tstplus.html#_splitter.forward',
                                                                                'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTBackbone': ('models.tstplus.html#_tstbackbone', 'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTBackbone.__init__': ( 'models.tstplus.html#_tstbackbone.__init__',
                                                                                    'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTBackbone._key_padding_mask': ( 'models.tstplus.html#_tstbackbone._key_padding_mask',
                                                                                             'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTBackbone._positional_encoding': ( 'models.tstplus.html#_tstbackbone._positional_encoding',
                                                                                                'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTBackbone.forward': ( 'models.tstplus.html#_tstbackbone.forward',
                                                                                   'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTEncoder': ('models.tstplus.html#_tstencoder', 'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTEncoder.__init__': ( 'models.tstplus.html#_tstencoder.__init__',
                                                                                   'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTEncoder.forward': ( 'models.tstplus.html#_tstencoder.forward',
                                                                                  'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTEncoderLayer': ( 'models.tstplus.html#_tstencoderlayer',
                                                                               'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTEncoderLayer.__init__': ( 'models.tstplus.html#_tstencoderlayer.__init__',
                                                                                        'tsai/models/TSTPlus.py'),
                                     'tsai.models.TSTPlus._TSTEncoderLayer.forward': ( 'models.tstplus.html#_tstencoderlayer.forward',
                                                                                       'tsai/models/TSTPlus.py')},
            'tsai.models.TSiTPlus': { 'tsai.models.TSiTPlus.TSiTPlus': ('models.tsitplus.html#tsitplus', 'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus.TSiTPlus.__init__': ( 'models.tsitplus.html#tsitplus.__init__',
                                                                                  'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTBackbone': ( 'models.tsitplus.html#_tsitbackbone',
                                                                              'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTBackbone.__init__': ( 'models.tsitplus.html#_tsitbackbone.__init__',
                                                                                       'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTBackbone.forward': ( 'models.tsitplus.html#_tsitbackbone.forward',
                                                                                      'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTEncoder': ('models.tsitplus.html#_tsitencoder', 'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTEncoder.__init__': ( 'models.tsitplus.html#_tsitencoder.__init__',
                                                                                      'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTEncoder.forward': ( 'models.tsitplus.html#_tsitencoder.forward',
                                                                                     'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTEncoderLayer': ( 'models.tsitplus.html#_tsitencoderlayer',
                                                                                  'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTEncoderLayer.__init__': ( 'models.tsitplus.html#_tsitencoderlayer.__init__',
                                                                                           'tsai/models/TSiTPlus.py'),
                                      'tsai.models.TSiTPlus._TSiTEncoderLayer.forward': ( 'models.tsitplus.html#_tsitencoderlayer.forward',
                                                                                          'tsai/models/TSiTPlus.py')},
            'tsai.models.TabFusionTransformer': { 'tsai.models.TabFusionTransformer.Sequential': ( 'models.tabfusiontransformer.html#sequential',
                                                                                                   'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.Sequential.forward': ( 'models.tabfusiontransformer.html#sequential.forward',
                                                                                                           'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.TSTabFusionTransformer': ( 'models.tabfusiontransformer.html#tstabfusiontransformer',
                                                                                                               'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.TSTabFusionTransformer.__init__': ( 'models.tabfusiontransformer.html#tstabfusiontransformer.__init__',
                                                                                                                        'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.TSTabFusionTransformer.forward': ( 'models.tabfusiontransformer.html#tstabfusiontransformer.forward',
                                                                                                                       'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.TabFusionBackbone': ( 'models.tabfusiontransformer.html#tabfusionbackbone',
                                                                                                          'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.TabFusionBackbone.__init__': ( 'models.tabfusiontransformer.html#tabfusionbackbone.__init__',
                                                                                                                   'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.TabFusionBackbone.forward': ( 'models.tabfusiontransformer.html#tabfusionbackbone.forward',
                                                                                                                  'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.TabFusionTransformer': ( 'models.tabfusiontransformer.html#tabfusiontransformer',
                                                                                                             'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.TabFusionTransformer.__init__': ( 'models.tabfusiontransformer.html#tabfusiontransformer.__init__',
                                                                                                                      'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._Flatten': ( 'models.tabfusiontransformer.html#_flatten',
                                                                                                 'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._Flatten.__init__': ( 'models.tabfusiontransformer.html#_flatten.__init__',
                                                                                                          'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._Flatten.forward': ( 'models.tabfusiontransformer.html#_flatten.forward',
                                                                                                         'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._MLP': ( 'models.tabfusiontransformer.html#_mlp',
                                                                                             'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._MLP.__init__': ( 'models.tabfusiontransformer.html#_mlp.__init__',
                                                                                                      'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._MLP.forward': ( 'models.tabfusiontransformer.html#_mlp.forward',
                                                                                                     'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._MultiheadAttention': ( 'models.tabfusiontransformer.html#_multiheadattention',
                                                                                                            'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._MultiheadAttention.__init__': ( 'models.tabfusiontransformer.html#_multiheadattention.__init__',
                                                                                                                     'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._MultiheadAttention.forward': ( 'models.tabfusiontransformer.html#_multiheadattention.forward',
                                                                                                                    'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._ScaledDotProductAttention': ( 'models.tabfusiontransformer.html#_scaleddotproductattention',
                                                                                                                   'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._ScaledDotProductAttention.__init__': ( 'models.tabfusiontransformer.html#_scaleddotproductattention.__init__',
                                                                                                                            'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._ScaledDotProductAttention.forward': ( 'models.tabfusiontransformer.html#_scaleddotproductattention.forward',
                                                                                                                           'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._TabFusionEncoder': ( 'models.tabfusiontransformer.html#_tabfusionencoder',
                                                                                                          'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._TabFusionEncoder.__init__': ( 'models.tabfusiontransformer.html#_tabfusionencoder.__init__',
                                                                                                                   'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._TabFusionEncoder.forward': ( 'models.tabfusiontransformer.html#_tabfusionencoder.forward',
                                                                                                                  'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._TabFusionEncoderLayer': ( 'models.tabfusiontransformer.html#_tabfusionencoderlayer',
                                                                                                               'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._TabFusionEncoderLayer.__init__': ( 'models.tabfusiontransformer.html#_tabfusionencoderlayer.__init__',
                                                                                                                        'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._TabFusionEncoderLayer._get_activation_fn': ( 'models.tabfusiontransformer.html#_tabfusionencoderlayer._get_activation_fn',
                                                                                                                                  'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer._TabFusionEncoderLayer.forward': ( 'models.tabfusiontransformer.html#_tabfusionencoderlayer.forward',
                                                                                                                       'tsai/models/TabFusionTransformer.py'),
                                                  'tsai.models.TabFusionTransformer.ifnone': ( 'models.tabfusiontransformer.html#ifnone',
                                                                                               'tsai/models/TabFusionTransformer.py')},
            'tsai.models.TabModel': { 'tsai.models.TabModel.TabBackbone': ('models.tabmodel.html#tabbackbone', 'tsai/models/TabModel.py'),
                                      'tsai.models.TabModel.TabBackbone.__init__': ( 'models.tabmodel.html#tabbackbone.__init__',
                                                                                     'tsai/models/TabModel.py'),
                                      'tsai.models.TabModel.TabBackbone.forward': ( 'models.tabmodel.html#tabbackbone.forward',
                                                                                    'tsai/models/TabModel.py'),
                                      'tsai.models.TabModel.TabHead': ('models.tabmodel.html#tabhead', 'tsai/models/TabModel.py'),
                                      'tsai.models.TabModel.TabHead.__init__': ( 'models.tabmodel.html#tabhead.__init__',
                                                                                 'tsai/models/TabModel.py'),
                                      'tsai.models.TabModel.TabHead.forward': ( 'models.tabmodel.html#tabhead.forward',
                                                                                'tsai/models/TabModel.py'),
                                      'tsai.models.TabModel.TabModel': ('models.tabmodel.html#tabmodel', 'tsai/models/TabModel.py'),
                                      'tsai.models.TabModel.TabModel.__init__': ( 'models.tabmodel.html#tabmodel.__init__',
                                                                                  'tsai/models/TabModel.py')},
            'tsai.models.TabTransformer': { 'tsai.models.TabTransformer.FullEmbeddingDropout': ( 'models.tabtransformer.html#fullembeddingdropout',
                                                                                                 'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.FullEmbeddingDropout.__init__': ( 'models.tabtransformer.html#fullembeddingdropout.__init__',
                                                                                                          'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.FullEmbeddingDropout.forward': ( 'models.tabtransformer.html#fullembeddingdropout.forward',
                                                                                                         'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.SharedEmbedding': ( 'models.tabtransformer.html#sharedembedding',
                                                                                            'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.SharedEmbedding.__init__': ( 'models.tabtransformer.html#sharedembedding.__init__',
                                                                                                     'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.SharedEmbedding.forward': ( 'models.tabtransformer.html#sharedembedding.forward',
                                                                                                    'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.TabTransformer': ( 'models.tabtransformer.html#tabtransformer',
                                                                                           'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.TabTransformer.__init__': ( 'models.tabtransformer.html#tabtransformer.__init__',
                                                                                                    'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.TabTransformer.forward': ( 'models.tabtransformer.html#tabtransformer.forward',
                                                                                                   'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._Embedding': ( 'models.tabtransformer.html#_embedding',
                                                                                       'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._Embedding.__init__': ( 'models.tabtransformer.html#_embedding.__init__',
                                                                                                'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._MLP': ( 'models.tabtransformer.html#_mlp',
                                                                                 'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._MLP.__init__': ( 'models.tabtransformer.html#_mlp.__init__',
                                                                                          'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._MLP.forward': ( 'models.tabtransformer.html#_mlp.forward',
                                                                                         'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._MultiheadAttention': ( 'models.tabtransformer.html#_multiheadattention',
                                                                                                'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._MultiheadAttention.__init__': ( 'models.tabtransformer.html#_multiheadattention.__init__',
                                                                                                         'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._MultiheadAttention.forward': ( 'models.tabtransformer.html#_multiheadattention.forward',
                                                                                                        'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._ScaledDotProductAttention': ( 'models.tabtransformer.html#_scaleddotproductattention',
                                                                                                       'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._ScaledDotProductAttention.__init__': ( 'models.tabtransformer.html#_scaleddotproductattention.__init__',
                                                                                                                'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._ScaledDotProductAttention.forward': ( 'models.tabtransformer.html#_scaleddotproductattention.forward',
                                                                                                               'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._TabEncoder': ( 'models.tabtransformer.html#_tabencoder',
                                                                                        'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._TabEncoder.__init__': ( 'models.tabtransformer.html#_tabencoder.__init__',
                                                                                                 'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._TabEncoder.forward': ( 'models.tabtransformer.html#_tabencoder.forward',
                                                                                                'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._TabEncoderLayer': ( 'models.tabtransformer.html#_tabencoderlayer',
                                                                                             'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._TabEncoderLayer.__init__': ( 'models.tabtransformer.html#_tabencoderlayer.__init__',
                                                                                                      'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._TabEncoderLayer._get_activation_fn': ( 'models.tabtransformer.html#_tabencoderlayer._get_activation_fn',
                                                                                                                'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._TabEncoderLayer.forward': ( 'models.tabtransformer.html#_tabencoderlayer.forward',
                                                                                                     'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer._trunc_normal_': ( 'models.tabtransformer.html#_trunc_normal_',
                                                                                           'tsai/models/TabTransformer.py'),
                                            'tsai.models.TabTransformer.ifnone': ( 'models.tabtransformer.html#ifnone',
                                                                                   'tsai/models/TabTransformer.py')},
            'tsai.models.TransformerModel': { 'tsai.models.TransformerModel.TransformerModel': ( 'models.transformermodel.html#transformermodel',
                                                                                                 'tsai/models/TransformerModel.py'),
                                              'tsai.models.TransformerModel.TransformerModel.__init__': ( 'models.transformermodel.html#transformermodel.__init__',
                                                                                                          'tsai/models/TransformerModel.py'),
                                              'tsai.models.TransformerModel.TransformerModel.forward': ( 'models.transformermodel.html#transformermodel.forward',
                                                                                                         'tsai/models/TransformerModel.py')},
            'tsai.models.XCM': { 'tsai.models.XCM.XCM': ('models.xcm.html#xcm', 'tsai/models/XCM.py'),
                                 'tsai.models.XCM.XCM.__init__': ('models.xcm.html#xcm.__init__', 'tsai/models/XCM.py'),
                                 'tsai.models.XCM.XCM.create_head': ('models.xcm.html#xcm.create_head', 'tsai/models/XCM.py'),
                                 'tsai.models.XCM.XCM.forward': ('models.xcm.html#xcm.forward', 'tsai/models/XCM.py'),
                                 'tsai.models.XCM.XCM.show_gradcam': ('models.xcm.html#xcm.show_gradcam', 'tsai/models/XCM.py')},
            'tsai.models.XCMPlus': { 'tsai.models.XCMPlus.XCMPlus': ('models.xcmplus.html#xcmplus', 'tsai/models/XCMPlus.py'),
                                     'tsai.models.XCMPlus.XCMPlus.__init__': ( 'models.xcmplus.html#xcmplus.__init__',
                                                                               'tsai/models/XCMPlus.py'),
                                     'tsai.models.XCMPlus.XCMPlus.create_head': ( 'models.xcmplus.html#xcmplus.create_head',
                                                                                  'tsai/models/XCMPlus.py'),
                                     'tsai.models.XCMPlus.XCMPlus.show_gradcam': ( 'models.xcmplus.html#xcmplus.show_gradcam',
                                                                                   'tsai/models/XCMPlus.py'),
                                     'tsai.models.XCMPlus._XCMPlus_Backbone': ( 'models.xcmplus.html#_xcmplus_backbone',
                                                                                'tsai/models/XCMPlus.py'),
                                     'tsai.models.XCMPlus._XCMPlus_Backbone.__init__': ( 'models.xcmplus.html#_xcmplus_backbone.__init__',
                                                                                         'tsai/models/XCMPlus.py'),
                                     'tsai.models.XCMPlus._XCMPlus_Backbone.forward': ( 'models.xcmplus.html#_xcmplus_backbone.forward',
                                                                                        'tsai/models/XCMPlus.py')},
            'tsai.models.XResNet1d': { 'tsai.models.XResNet1d.xresnet1d101': ( 'models.xresnet1d.html#xresnet1d101',
                                                                               'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d152': ( 'models.xresnet1d.html#xresnet1d152',
                                                                               'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d18': ( 'models.xresnet1d.html#xresnet1d18',
                                                                              'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d18_deep': ( 'models.xresnet1d.html#xresnet1d18_deep',
                                                                                   'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d18_deeper': ( 'models.xresnet1d.html#xresnet1d18_deeper',
                                                                                     'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d34': ( 'models.xresnet1d.html#xresnet1d34',
                                                                              'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d34_deep': ( 'models.xresnet1d.html#xresnet1d34_deep',
                                                                                   'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d34_deeper': ( 'models.xresnet1d.html#xresnet1d34_deeper',
                                                                                     'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d50': ( 'models.xresnet1d.html#xresnet1d50',
                                                                              'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d50_deep': ( 'models.xresnet1d.html#xresnet1d50_deep',
                                                                                   'tsai/models/XResNet1d.py'),
                                       'tsai.models.XResNet1d.xresnet1d50_deeper': ( 'models.xresnet1d.html#xresnet1d50_deeper',
                                                                                     'tsai/models/XResNet1d.py')},
            'tsai.models.XResNet1dPlus': { 'tsai.models.XResNet1dPlus.XResNet1dPlus': ( 'models.xresnet1dplus.html#xresnet1dplus',
                                                                                        'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.XResNet1dPlus.__init__': ( 'models.xresnet1dplus.html#xresnet1dplus.__init__',
                                                                                                 'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.XResNet1dPlus._init_cnn': ( 'models.xresnet1dplus.html#xresnet1dplus._init_cnn',
                                                                                                  'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.XResNet1dPlus._make_blocks': ( 'models.xresnet1dplus.html#xresnet1dplus._make_blocks',
                                                                                                     'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.XResNet1dPlus._make_layer': ( 'models.xresnet1dplus.html#xresnet1dplus._make_layer',
                                                                                                    'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus._xresnetplus': ( 'models.xresnet1dplus.html#_xresnetplus',
                                                                                       'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d101plus': ( 'models.xresnet1dplus.html#xresnet1d101plus',
                                                                                           'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d152plus': ( 'models.xresnet1dplus.html#xresnet1d152plus',
                                                                                           'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d18_deeperplus': ( 'models.xresnet1dplus.html#xresnet1d18_deeperplus',
                                                                                                 'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d18_deepplus': ( 'models.xresnet1dplus.html#xresnet1d18_deepplus',
                                                                                               'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d18plus': ( 'models.xresnet1dplus.html#xresnet1d18plus',
                                                                                          'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d34_deeperplus': ( 'models.xresnet1dplus.html#xresnet1d34_deeperplus',
                                                                                                 'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d34_deepplus': ( 'models.xresnet1dplus.html#xresnet1d34_deepplus',
                                                                                               'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d34plus': ( 'models.xresnet1dplus.html#xresnet1d34plus',
                                                                                          'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d50_deeperplus': ( 'models.xresnet1dplus.html#xresnet1d50_deeperplus',
                                                                                                 'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d50_deepplus': ( 'models.xresnet1dplus.html#xresnet1d50_deepplus',
                                                                                               'tsai/models/XResNet1dPlus.py'),
                                           'tsai.models.XResNet1dPlus.xresnet1d50plus': ( 'models.xresnet1dplus.html#xresnet1d50plus',
                                                                                          'tsai/models/XResNet1dPlus.py')},
            'tsai.models.XceptionTime': { 'tsai.models.XceptionTime.XceptionBlock': ( 'models.xceptiontime.html#xceptionblock',
                                                                                      'tsai/models/XceptionTime.py'),
                                          'tsai.models.XceptionTime.XceptionBlock.__init__': ( 'models.xceptiontime.html#xceptionblock.__init__',
                                                                                               'tsai/models/XceptionTime.py'),
                                          'tsai.models.XceptionTime.XceptionBlock.forward': ( 'models.xceptiontime.html#xceptionblock.forward',
                                                                                              'tsai/models/XceptionTime.py'),
                                          'tsai.models.XceptionTime.XceptionModule': ( 'models.xceptiontime.html#xceptionmodule',
                                                                                       'tsai/models/XceptionTime.py'),
                                          'tsai.models.XceptionTime.XceptionModule.__init__': ( 'models.xceptiontime.html#xceptionmodule.__init__',
                                                                                                'tsai/models/XceptionTime.py'),
                                          'tsai.models.XceptionTime.XceptionModule.forward': ( 'models.xceptiontime.html#xceptionmodule.forward',
                                                                                               'tsai/models/XceptionTime.py'),
                                          'tsai.models.XceptionTime.XceptionTime': ( 'models.xceptiontime.html#xceptiontime',
                                                                                     'tsai/models/XceptionTime.py'),
                                          'tsai.models.XceptionTime.XceptionTime.__init__': ( 'models.xceptiontime.html#xceptiontime.__init__',
                                                                                              'tsai/models/XceptionTime.py'),
                                          'tsai.models.XceptionTime.XceptionTime.forward': ( 'models.xceptiontime.html#xceptiontime.forward',
                                                                                             'tsai/models/XceptionTime.py')},
            'tsai.models.XceptionTimePlus': { 'tsai.models.XceptionTimePlus.XceptionBlockPlus': ( 'models.xceptiontimeplus.html#xceptionblockplus',
                                                                                                  'tsai/models/XceptionTimePlus.py'),
                                              'tsai.models.XceptionTimePlus.XceptionBlockPlus.__init__': ( 'models.xceptiontimeplus.html#xceptionblockplus.__init__',
                                                                                                           'tsai/models/XceptionTimePlus.py'),
                                              'tsai.models.XceptionTimePlus.XceptionBlockPlus.forward': ( 'models.xceptiontimeplus.html#xceptionblockplus.forward',
                                                                                                          'tsai/models/XceptionTimePlus.py'),
                                              'tsai.models.XceptionTimePlus.XceptionModulePlus': ( 'models.xceptiontimeplus.html#xceptionmoduleplus',
                                                                                                   'tsai/models/XceptionTimePlus.py'),
                                              'tsai.models.XceptionTimePlus.XceptionModulePlus.__init__': ( 'models.xceptiontimeplus.html#xceptionmoduleplus.__init__',
                                                                                                            'tsai/models/XceptionTimePlus.py'),
                                              'tsai.models.XceptionTimePlus.XceptionModulePlus.forward': ( 'models.xceptiontimeplus.html#xceptionmoduleplus.forward',
                                                                                                           'tsai/models/XceptionTimePlus.py'),
                                              'tsai.models.XceptionTimePlus.XceptionTimePlus': ( 'models.xceptiontimeplus.html#xceptiontimeplus',
                                                                                                 'tsai/models/XceptionTimePlus.py'),
                                              'tsai.models.XceptionTimePlus.XceptionTimePlus.__init__': ( 'models.xceptiontimeplus.html#xceptiontimeplus.__init__',
                                                                                                          'tsai/models/XceptionTimePlus.py')},
            'tsai.models.all': {},
            'tsai.models.explainability': { 'tsai.models.explainability.get_acts_and_grads': ( 'models.explainability.html#get_acts_and_grads',
                                                                                               'tsai/models/explainability.py'),
                                            'tsai.models.explainability.get_attribution_map': ( 'models.explainability.html#get_attribution_map',
                                                                                                'tsai/models/explainability.py')},
            'tsai.models.gMLP': { 'tsai.models.gMLP._SpatialGatingUnit': ('models.gmlp.html#_spatialgatingunit', 'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP._SpatialGatingUnit.__init__': ( 'models.gmlp.html#_spatialgatingunit.__init__',
                                                                                    'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP._SpatialGatingUnit.forward': ( 'models.gmlp.html#_spatialgatingunit.forward',
                                                                                   'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP._gMLPBackbone': ('models.gmlp.html#_gmlpbackbone', 'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP._gMLPBackbone.__init__': ( 'models.gmlp.html#_gmlpbackbone.__init__',
                                                                               'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP._gMLPBackbone.forward': ( 'models.gmlp.html#_gmlpbackbone.forward',
                                                                              'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP._gMLPBlock': ('models.gmlp.html#_gmlpblock', 'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP._gMLPBlock.__init__': ('models.gmlp.html#_gmlpblock.__init__', 'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP._gMLPBlock.forward': ('models.gmlp.html#_gmlpblock.forward', 'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP.gMLP': ('models.gmlp.html#gmlp', 'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP.gMLP.__init__': ('models.gmlp.html#gmlp.__init__', 'tsai/models/gMLP.py'),
                                  'tsai.models.gMLP.gMLP.forward': ('models.gmlp.html#gmlp.forward', 'tsai/models/gMLP.py')},
            'tsai.models.layers': { 'tsai.models.layers.AdaptiveWeightedAvgPool1d': ( 'models.layers.html#adaptiveweightedavgpool1d',
                                                                                      'tsai/models/layers.py'),
                                    'tsai.models.layers.AdaptiveWeightedAvgPool1d.__init__': ( 'models.layers.html#adaptiveweightedavgpool1d.__init__',
                                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.AdaptiveWeightedAvgPool1d.forward': ( 'models.layers.html#adaptiveweightedavgpool1d.forward',
                                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.Add': ('models.layers.html#add', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Add.__repr__': ('models.layers.html#add.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Add.forward': ('models.layers.html#add.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.AddCoords1d': ('models.layers.html#addcoords1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.AddCoords1d.forward': ( 'models.layers.html#addcoords1d.forward',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.AttentionalPool1d': ( 'models.layers.html#attentionalpool1d',
                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.AttentionalPool1d.__init__': ( 'models.layers.html#attentionalpool1d.__init__',
                                                                                       'tsai/models/layers.py'),
                                    'tsai.models.layers.AttentionalPool1d.forward': ( 'models.layers.html#attentionalpool1d.forward',
                                                                                      'tsai/models/layers.py'),
                                    'tsai.models.layers.CausalConv1d': ('models.layers.html#causalconv1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.CausalConv1d.__init__': ( 'models.layers.html#causalconv1d.__init__',
                                                                                  'tsai/models/layers.py'),
                                    'tsai.models.layers.CausalConv1d.forward': ( 'models.layers.html#causalconv1d.forward',
                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.Chomp1d': ('models.layers.html#chomp1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Chomp1d.__init__': ('models.layers.html#chomp1d.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Chomp1d.forward': ('models.layers.html#chomp1d.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Clamp': ('models.layers.html#clamp', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Clamp.__init__': ('models.layers.html#clamp.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Clamp.__repr__': ('models.layers.html#clamp.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Clamp.forward': ('models.layers.html#clamp.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Clip': ('models.layers.html#clip', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Clip.__init__': ('models.layers.html#clip.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Clip.__repr__': ('models.layers.html#clip.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Clip.forward': ('models.layers.html#clip.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Concat': ('models.layers.html#concat', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Concat.__init__': ('models.layers.html#concat.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Concat.__repr__': ('models.layers.html#concat.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Concat.forward': ('models.layers.html#concat.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Conv1d': ('models.layers.html#conv1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Conv2d': ('models.layers.html#conv2d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Conv2dSame': ('models.layers.html#conv2dsame', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Conv2dSame.__init__': ( 'models.layers.html#conv2dsame.__init__',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.Conv2dSame.forward': ( 'models.layers.html#conv2dsame.forward',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.ConvBlock': ('models.layers.html#convblock', 'tsai/models/layers.py'),
                                    'tsai.models.layers.ConvBlock.__init__': ( 'models.layers.html#convblock.__init__',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.DropPath': ('models.layers.html#droppath', 'tsai/models/layers.py'),
                                    'tsai.models.layers.DropPath.__init__': ( 'models.layers.html#droppath.__init__',
                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.DropPath.forward': ('models.layers.html#droppath.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GACP1d': ('models.layers.html#gacp1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GACP1d.__init__': ('models.layers.html#gacp1d.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GACP1d.forward': ('models.layers.html#gacp1d.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GAP1d': ('models.layers.html#gap1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GAP1d.__init__': ('models.layers.html#gap1d.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GAP1d.forward': ('models.layers.html#gap1d.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GAWP1d': ('models.layers.html#gawp1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GAWP1d.__init__': ('models.layers.html#gawp1d.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GAWP1d.forward': ('models.layers.html#gawp1d.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GAttP1d': ('models.layers.html#gattp1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GAttP1d.__init__': ('models.layers.html#gattp1d.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GEGLU': ('models.layers.html#geglu', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GEGLU.forward': ('models.layers.html#geglu.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GaussianNoise': ('models.layers.html#gaussiannoise', 'tsai/models/layers.py'),
                                    'tsai.models.layers.GaussianNoise.__init__': ( 'models.layers.html#gaussiannoise.__init__',
                                                                                   'tsai/models/layers.py'),
                                    'tsai.models.layers.GaussianNoise.forward': ( 'models.layers.html#gaussiannoise.forward',
                                                                                  'tsai/models/layers.py'),
                                    'tsai.models.layers.GlobalWeightedAveragePool1d': ( 'models.layers.html#globalweightedaveragepool1d',
                                                                                        'tsai/models/layers.py'),
                                    'tsai.models.layers.GlobalWeightedAveragePool1d.__init__': ( 'models.layers.html#globalweightedaveragepool1d.__init__',
                                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.GlobalWeightedAveragePool1d.forward': ( 'models.layers.html#globalweightedaveragepool1d.forward',
                                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.LSTMOutput': ('models.layers.html#lstmoutput', 'tsai/models/layers.py'),
                                    'tsai.models.layers.LSTMOutput.__repr__': ( 'models.layers.html#lstmoutput.__repr__',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.LSTMOutput.forward': ( 'models.layers.html#lstmoutput.forward',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.LambdaPlus': ('models.layers.html#lambdaplus', 'tsai/models/layers.py'),
                                    'tsai.models.layers.LambdaPlus.__init__': ( 'models.layers.html#lambdaplus.__init__',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.LambdaPlus.forward': ( 'models.layers.html#lambdaplus.forward',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.LastStep': ('models.layers.html#laststep', 'tsai/models/layers.py'),
                                    'tsai.models.layers.LastStep.__repr__': ( 'models.layers.html#laststep.__repr__',
                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.LastStep.forward': ('models.layers.html#laststep.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.LinLnDrop': ('models.layers.html#linlndrop', 'tsai/models/layers.py'),
                                    'tsai.models.layers.LinLnDrop.__init__': ( 'models.layers.html#linlndrop.__init__',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.LogitAdjustmentLayer': ( 'models.layers.html#logitadjustmentlayer',
                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.LogitAdjustmentLayer.__init__': ( 'models.layers.html#logitadjustmentlayer.__init__',
                                                                                          'tsai/models/layers.py'),
                                    'tsai.models.layers.LogitAdjustmentLayer.forward': ( 'models.layers.html#logitadjustmentlayer.forward',
                                                                                         'tsai/models/layers.py'),
                                    'tsai.models.layers.Matrix_Scale': ('models.layers.html#matrix_scale', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Matrix_Scale.__init__': ( 'models.layers.html#matrix_scale.__init__',
                                                                                  'tsai/models/layers.py'),
                                    'tsai.models.layers.Matrix_Scale.forward': ( 'models.layers.html#matrix_scale.forward',
                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.Max': ('models.layers.html#max', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Max.__init__': ('models.layers.html#max.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Max.__repr__': ('models.layers.html#max.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Max.forward': ('models.layers.html#max.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.MaxPPVPool1d': ('models.layers.html#maxppvpool1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.MaxPPVPool1d.forward': ( 'models.layers.html#maxppvpool1d.forward',
                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiConv1d': ('models.layers.html#multiconv1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiConv1d.__init__': ( 'models.layers.html#multiconv1d.__init__',
                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiConv1d.forward': ( 'models.layers.html#multiconv1d.forward',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiEmbedding': ('models.layers.html#multiembedding', 'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiEmbedding.__init__': ( 'models.layers.html#multiembedding.__init__',
                                                                                    'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiEmbedding.forward': ( 'models.layers.html#multiembedding.forward',
                                                                                   'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiheadAttention': ( 'models.layers.html#multiheadattention',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiheadAttention.__init__': ( 'models.layers.html#multiheadattention.__init__',
                                                                                        'tsai/models/layers.py'),
                                    'tsai.models.layers.MultiheadAttention.forward': ( 'models.layers.html#multiheadattention.forward',
                                                                                       'tsai/models/layers.py'),
                                    'tsai.models.layers.Norm': ('models.layers.html#norm', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PPAuc': ('models.layers.html#ppauc', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PPAuc.__init__': ('models.layers.html#ppauc.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PPAuc.__repr__': ('models.layers.html#ppauc.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PPAuc.forward': ('models.layers.html#ppauc.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PPV': ('models.layers.html#ppv', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PPV.__init__': ('models.layers.html#ppv.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PPV.__repr__': ('models.layers.html#ppv.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PPV.forward': ('models.layers.html#ppv.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Pad1d': ('models.layers.html#pad1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Pad1d.__init__': ('models.layers.html#pad1d.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Pad2d': ('models.layers.html#pad2d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Pad2d.__init__': ('models.layers.html#pad2d.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Permute': ('models.layers.html#permute', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Permute.__init__': ('models.layers.html#permute.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Permute.__repr__': ('models.layers.html#permute.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Permute.forward': ('models.layers.html#permute.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PoolingLayer': ('models.layers.html#poolinglayer', 'tsai/models/layers.py'),
                                    'tsai.models.layers.PoolingLayer.__init__': ( 'models.layers.html#poolinglayer.__init__',
                                                                                  'tsai/models/layers.py'),
                                    'tsai.models.layers.PoolingLayer.__repr__': ( 'models.layers.html#poolinglayer.__repr__',
                                                                                  'tsai/models/layers.py'),
                                    'tsai.models.layers.PoolingLayer.forward': ( 'models.layers.html#poolinglayer.forward',
                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.PositionwiseFeedForward': ( 'models.layers.html#positionwisefeedforward',
                                                                                    'tsai/models/layers.py'),
                                    'tsai.models.layers.PositionwiseFeedForward.__init__': ( 'models.layers.html#positionwisefeedforward.__init__',
                                                                                             'tsai/models/layers.py'),
                                    'tsai.models.layers.ReGLU': ('models.layers.html#reglu', 'tsai/models/layers.py'),
                                    'tsai.models.layers.ReGLU.forward': ('models.layers.html#reglu.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.ReZero': ('models.layers.html#rezero', 'tsai/models/layers.py'),
                                    'tsai.models.layers.ReZero.__init__': ('models.layers.html#rezero.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.ReZero.forward': ('models.layers.html#rezero.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.ResBlock1dPlus': ('models.layers.html#resblock1dplus', 'tsai/models/layers.py'),
                                    'tsai.models.layers.ResBlock1dPlus.__init__': ( 'models.layers.html#resblock1dplus.__init__',
                                                                                    'tsai/models/layers.py'),
                                    'tsai.models.layers.ResBlock1dPlus.forward': ( 'models.layers.html#resblock1dplus.forward',
                                                                                   'tsai/models/layers.py'),
                                    'tsai.models.layers.Reshape': ('models.layers.html#reshape', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Reshape.__init__': ('models.layers.html#reshape.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Reshape.__repr__': ('models.layers.html#reshape.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Reshape.forward': ('models.layers.html#reshape.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.RevIN': ('models.layers.html#revin', 'tsai/models/layers.py'),
                                    'tsai.models.layers.RevIN.__init__': ('models.layers.html#revin.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.RevIN.denormalize': ( 'models.layers.html#revin.denormalize',
                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.RevIN.forward': ('models.layers.html#revin.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.RevIN.normalize': ('models.layers.html#revin.normalize', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SEModule1d': ('models.layers.html#semodule1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SameConv1d': ('models.layers.html#sameconv1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SameConv1d.__init__': ( 'models.layers.html#sameconv1d.__init__',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.SameConv1d.forward': ( 'models.layers.html#sameconv1d.forward',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.ScaledDotProductAttention': ( 'models.layers.html#scaleddotproductattention',
                                                                                      'tsai/models/layers.py'),
                                    'tsai.models.layers.ScaledDotProductAttention.__init__': ( 'models.layers.html#scaleddotproductattention.__init__',
                                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.ScaledDotProductAttention.forward': ( 'models.layers.html#scaleddotproductattention.forward',
                                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.SeparableConv1d': ('models.layers.html#separableconv1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SeparableConv1d.__init__': ( 'models.layers.html#separableconv1d.__init__',
                                                                                     'tsai/models/layers.py'),
                                    'tsai.models.layers.SeparableConv1d.forward': ( 'models.layers.html#separableconv1d.forward',
                                                                                    'tsai/models/layers.py'),
                                    'tsai.models.layers.Sequential': ('models.layers.html#sequential', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Sequential.forward': ( 'models.layers.html#sequential.forward',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.Sharpen': ('models.layers.html#sharpen', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Sharpen.__init__': ('models.layers.html#sharpen.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Sharpen.forward': ('models.layers.html#sharpen.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SmeLU': ('models.layers.html#smelu', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SmeLU.__init__': ('models.layers.html#smelu.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SmeLU.forward': ('models.layers.html#smelu.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SoftMax': ('models.layers.html#softmax', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SoftMax.__init__': ('models.layers.html#softmax.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SoftMax.__repr__': ('models.layers.html#softmax.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SoftMax.forward': ('models.layers.html#softmax.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Squeeze': ('models.layers.html#squeeze', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Squeeze.__init__': ('models.layers.html#squeeze.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Squeeze.__repr__': ('models.layers.html#squeeze.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Squeeze.forward': ('models.layers.html#squeeze.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SqueezeExciteBlock': ( 'models.layers.html#squeezeexciteblock',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.SqueezeExciteBlock.__init__': ( 'models.layers.html#squeezeexciteblock.__init__',
                                                                                        'tsai/models/layers.py'),
                                    'tsai.models.layers.SqueezeExciteBlock.forward': ( 'models.layers.html#squeezeexciteblock.forward',
                                                                                       'tsai/models/layers.py'),
                                    'tsai.models.layers.SwishBeta': ('models.layers.html#swishbeta', 'tsai/models/layers.py'),
                                    'tsai.models.layers.SwishBeta.__multiinit__': ( 'models.layers.html#swishbeta.__multiinit__',
                                                                                    'tsai/models/layers.py'),
                                    'tsai.models.layers.SwishBeta.forward': ( 'models.layers.html#swishbeta.forward',
                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.TSEmbedding': ('models.layers.html#tsembedding', 'tsai/models/layers.py'),
                                    'tsai.models.layers.TSEmbedding.__init__': ( 'models.layers.html#tsembedding.__init__',
                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.Temp_Scale': ('models.layers.html#temp_scale', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Temp_Scale.__init__': ( 'models.layers.html#temp_scale.__init__',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.Temp_Scale.forward': ( 'models.layers.html#temp_scale.forward',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.TimeDistributed': ('models.layers.html#timedistributed', 'tsai/models/layers.py'),
                                    'tsai.models.layers.TimeDistributed.__init__': ( 'models.layers.html#timedistributed.__init__',
                                                                                     'tsai/models/layers.py'),
                                    'tsai.models.layers.TimeDistributed.forward': ( 'models.layers.html#timedistributed.forward',
                                                                                    'tsai/models/layers.py'),
                                    'tsai.models.layers.TokenLayer': ('models.layers.html#tokenlayer', 'tsai/models/layers.py'),
                                    'tsai.models.layers.TokenLayer.__init__': ( 'models.layers.html#tokenlayer.__init__',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.TokenLayer.__repr__': ( 'models.layers.html#tokenlayer.__repr__',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.TokenLayer.forward': ( 'models.layers.html#tokenlayer.forward',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.Transpose': ('models.layers.html#transpose', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Transpose.__init__': ( 'models.layers.html#transpose.__init__',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.Transpose.__repr__': ( 'models.layers.html#transpose.__repr__',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.Transpose.forward': ( 'models.layers.html#transpose.forward',
                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.Unfold': ('models.layers.html#unfold', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Unfold.__init__': ('models.layers.html#unfold.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Unfold.__repr__': ('models.layers.html#unfold.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Unfold.forward': ('models.layers.html#unfold.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Unsqueeze': ('models.layers.html#unsqueeze', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Unsqueeze.__init__': ( 'models.layers.html#unsqueeze.__init__',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.Unsqueeze.__repr__': ( 'models.layers.html#unsqueeze.__repr__',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.Unsqueeze.forward': ( 'models.layers.html#unsqueeze.forward',
                                                                              'tsai/models/layers.py'),
                                    'tsai.models.layers.Vector_Scale': ('models.layers.html#vector_scale', 'tsai/models/layers.py'),
                                    'tsai.models.layers.Vector_Scale.__init__': ( 'models.layers.html#vector_scale.__init__',
                                                                                  'tsai/models/layers.py'),
                                    'tsai.models.layers.Vector_Scale.forward': ( 'models.layers.html#vector_scale.forward',
                                                                                 'tsai/models/layers.py'),
                                    'tsai.models.layers.View': ('models.layers.html#view', 'tsai/models/layers.py'),
                                    'tsai.models.layers.View.__init__': ('models.layers.html#view.__init__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.View.__repr__': ('models.layers.html#view.__repr__', 'tsai/models/layers.py'),
                                    'tsai.models.layers.View.forward': ('models.layers.html#view.forward', 'tsai/models/layers.py'),
                                    'tsai.models.layers.attentional_pool_head': ( 'models.layers.html#attentional_pool_head',
                                                                                  'tsai/models/layers.py'),
                                    'tsai.models.layers.create_conv_3d_head': ( 'models.layers.html#create_conv_3d_head',
                                                                                'tsai/models/layers.py'),
                                    'tsai.models.layers.create_conv_3d_head.__init__': ( 'models.layers.html#create_conv_3d_head.__init__',
                                                                                         'tsai/models/layers.py'),
                                    'tsai.models.layers.create_conv_head': ('models.layers.html#create_conv_head', 'tsai/models/layers.py'),
                                    'tsai.models.layers.create_conv_lin_nd_head': ( 'models.layers.html#create_conv_lin_nd_head',
                                                                                    'tsai/models/layers.py'),
                                    'tsai.models.layers.create_conv_lin_nd_head.__init__': ( 'models.layers.html#create_conv_lin_nd_head.__init__',
                                                                                             'tsai/models/layers.py'),
                                    'tsai.models.layers.create_fc_head': ('models.layers.html#create_fc_head', 'tsai/models/layers.py'),
                                    'tsai.models.layers.create_lin_nd_head': ( 'models.layers.html#create_lin_nd_head',
                                                                               'tsai/models/layers.py'),
                                    'tsai.models.layers.create_lin_nd_head.__init__': ( 'models.layers.html#create_lin_nd_head.__init__',
                                                                                        'tsai/models/layers.py'),
                                    'tsai.models.layers.create_mlp_head': ('models.layers.html#create_mlp_head', 'tsai/models/layers.py'),
                                    'tsai.models.layers.create_pool_head': ('models.layers.html#create_pool_head', 'tsai/models/layers.py'),
                                    'tsai.models.layers.create_pool_plus_head': ( 'models.layers.html#create_pool_plus_head',
                                                                                  'tsai/models/layers.py'),
                                    'tsai.models.layers.create_rnn_head': ('models.layers.html#create_rnn_head', 'tsai/models/layers.py'),
                                    'tsai.models.layers.emb_sz_rule': ('models.layers.html#emb_sz_rule', 'tsai/models/layers.py'),
                                    'tsai.models.layers.get_act_fn': ('models.layers.html#get_act_fn', 'tsai/models/layers.py'),
                                    'tsai.models.layers.get_calibrator': ('models.layers.html#get_calibrator', 'tsai/models/layers.py'),
                                    'tsai.models.layers.gwa_pool_head': ('models.layers.html#gwa_pool_head', 'tsai/models/layers.py'),
                                    'tsai.models.layers.imputation_head': ('models.layers.html#imputation_head', 'tsai/models/layers.py'),
                                    'tsai.models.layers.init_lin_zero': ('models.layers.html#init_lin_zero', 'tsai/models/layers.py'),
                                    'tsai.models.layers.max_pool_head': ('models.layers.html#max_pool_head', 'tsai/models/layers.py'),
                                    'tsai.models.layers.same_padding1d': ('models.layers.html#same_padding1d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.same_padding2d': ('models.layers.html#same_padding2d', 'tsai/models/layers.py'),
                                    'tsai.models.layers.test_module_to_torchscript': ( 'models.layers.html#test_module_to_torchscript',
                                                                                       'tsai/models/layers.py'),
                                    'tsai.models.layers.universal_pool_head': ( 'models.layers.html#universal_pool_head',
                                                                                'tsai/models/layers.py')},
            'tsai.models.mWDN': { 'tsai.models.mWDN.WaveBlock': ('models.mwdn.html#waveblock', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.WaveBlock.__init__': ('models.mwdn.html#waveblock.__init__', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.WaveBlock.create_W': ('models.mwdn.html#waveblock.create_w', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.WaveBlock.forward': ('models.mwdn.html#waveblock.forward', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.mWDN': ('models.mwdn.html#mwdn', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.mWDN.__init__': ('models.mwdn.html#mwdn.__init__', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.mWDN.forward': ('models.mwdn.html#mwdn.forward', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.mWDNBlocks': ('models.mwdn.html#mwdnblocks', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.mWDNBlocks.__init__': ('models.mwdn.html#mwdnblocks.__init__', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.mWDNBlocks.forward': ('models.mwdn.html#mwdnblocks.forward', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.mWDNPlus': ('models.mwdn.html#mwdnplus', 'tsai/models/mWDN.py'),
                                  'tsai.models.mWDN.mWDNPlus.__init__': ('models.mwdn.html#mwdnplus.__init__', 'tsai/models/mWDN.py')},
            'tsai.models.misc': { 'tsai.models.misc.InputWrapper': ('models.misc.html#inputwrapper', 'tsai/models/misc.py'),
                                  'tsai.models.misc.InputWrapper.__init__': ( 'models.misc.html#inputwrapper.__init__',
                                                                              'tsai/models/misc.py'),
                                  'tsai.models.misc.InputWrapper.forward': ('models.misc.html#inputwrapper.forward', 'tsai/models/misc.py'),
                                  'tsai.models.misc.RecursiveWrapper': ('models.misc.html#recursivewrapper', 'tsai/models/misc.py'),
                                  'tsai.models.misc.RecursiveWrapper.__init__': ( 'models.misc.html#recursivewrapper.__init__',
                                                                                  'tsai/models/misc.py'),
                                  'tsai.models.misc.RecursiveWrapper.forward': ( 'models.misc.html#recursivewrapper.forward',
                                                                                 'tsai/models/misc.py'),
                                  'tsai.models.misc.ResidualWrapper': ('models.misc.html#residualwrapper', 'tsai/models/misc.py'),
                                  'tsai.models.misc.ResidualWrapper.__init__': ( 'models.misc.html#residualwrapper.__init__',
                                                                                 'tsai/models/misc.py'),
                                  'tsai.models.misc.ResidualWrapper.forward': ( 'models.misc.html#residualwrapper.forward',
                                                                                'tsai/models/misc.py')},
            'tsai.models.positional_encoders': { 'tsai.models.positional_encoders.Coord1dPosEncoding': ( 'models.positional_encoders.html#coord1dposencoding',
                                                                                                         'tsai/models/positional_encoders.py'),
                                                 'tsai.models.positional_encoders.Coord2dPosEncoding': ( 'models.positional_encoders.html#coord2dposencoding',
                                                                                                         'tsai/models/positional_encoders.py'),
                                                 'tsai.models.positional_encoders.PositionalEncoding': ( 'models.positional_encoders.html#positionalencoding',
                                                                                                         'tsai/models/positional_encoders.py')},
            'tsai.models.utils': { 'tsai.models.utils.SeqTokenizer': ('models.utils.html#seqtokenizer', 'tsai/models/utils.py'),
                                   'tsai.models.utils.apply_idxs': ('models.utils.html#apply_idxs', 'tsai/models/utils.py'),
                                   'tsai.models.utils.build_tabular_model': ( 'models.utils.html#build_tabular_model',
                                                                              'tsai/models/utils.py'),
                                   'tsai.models.utils.build_ts_model': ('models.utils.html#build_ts_model', 'tsai/models/utils.py'),
                                   'tsai.models.utils.build_tsimage_model': ( 'models.utils.html#build_tsimage_model',
                                                                              'tsai/models/utils.py'),
                                   'tsai.models.utils.change_model_head': ('models.utils.html#change_model_head', 'tsai/models/utils.py'),
                                   'tsai.models.utils.check_bias': ('models.utils.html#check_bias', 'tsai/models/utils.py'),
                                   'tsai.models.utils.check_weight': ('models.utils.html#check_weight', 'tsai/models/utils.py'),
                                   'tsai.models.utils.count_parameters': ('models.utils.html#count_parameters', 'tsai/models/utils.py'),
                                   'tsai.models.utils.get_clones': ('models.utils.html#get_clones', 'tsai/models/utils.py'),
                                   'tsai.models.utils.get_embed_size': ('models.utils.html#get_embed_size', 'tsai/models/utils.py'),
                                   'tsai.models.utils.get_layers': ('models.utils.html#get_layers', 'tsai/models/utils.py'),
                                   'tsai.models.utils.get_nf': ('models.utils.html#get_nf', 'tsai/models/utils.py'),
                                   'tsai.models.utils.has_bias': ('models.utils.html#has_bias', 'tsai/models/utils.py'),
                                   'tsai.models.utils.has_weight': ('models.utils.html#has_weight', 'tsai/models/utils.py'),
                                   'tsai.models.utils.has_weight_or_bias': ('models.utils.html#has_weight_or_bias', 'tsai/models/utils.py'),
                                   'tsai.models.utils.is_affine_layer': ('models.utils.html#is_affine_layer', 'tsai/models/utils.py'),
                                   'tsai.models.utils.is_bn': ('models.utils.html#is_bn', 'tsai/models/utils.py'),
                                   'tsai.models.utils.is_conv': ('models.utils.html#is_conv', 'tsai/models/utils.py'),
                                   'tsai.models.utils.is_conv_linear': ('models.utils.html#is_conv_linear', 'tsai/models/utils.py'),
                                   'tsai.models.utils.is_layer': ('models.utils.html#is_layer', 'tsai/models/utils.py'),
                                   'tsai.models.utils.is_linear': ('models.utils.html#is_linear', 'tsai/models/utils.py'),
                                   'tsai.models.utils.naive_forecaster': ('models.utils.html#naive_forecaster', 'tsai/models/utils.py'),
                                   'tsai.models.utils.output_size_calculator': ( 'models.utils.html#output_size_calculator',
                                                                                 'tsai/models/utils.py'),
                                   'tsai.models.utils.split_model': ('models.utils.html#split_model', 'tsai/models/utils.py'),
                                   'tsai.models.utils.transfer_weights': ('models.utils.html#transfer_weights', 'tsai/models/utils.py'),
                                   'tsai.models.utils.true_forecaster': ('models.utils.html#true_forecaster', 'tsai/models/utils.py'),
                                   'tsai.models.utils.ts_splitter': ('models.utils.html#ts_splitter', 'tsai/models/utils.py')},
            'tsai.optimizer': {'tsai.optimizer.wrap_optimizer': ('optimizer.html#wrap_optimizer', 'tsai/optimizer.py')},
            'tsai.optuna': {'tsai.optuna.run_optuna_study': ('optuna.html#run_optuna_study', 'tsai/optuna.py')},
            'tsai.tslearner': { 'tsai.tslearner.TSClassifier': ('tslearner.html#tsclassifier', 'tsai/tslearner.py'),
                                'tsai.tslearner.TSClassifier.__init__': ('tslearner.html#tsclassifier.__init__', 'tsai/tslearner.py'),
                                'tsai.tslearner.TSForecaster': ('tslearner.html#tsforecaster', 'tsai/tslearner.py'),
                                'tsai.tslearner.TSForecaster.__init__': ('tslearner.html#tsforecaster.__init__', 'tsai/tslearner.py'),
                                'tsai.tslearner.TSRegressor': ('tslearner.html#tsregressor', 'tsai/tslearner.py'),
                                'tsai.tslearner.TSRegressor.__init__': ('tslearner.html#tsregressor.__init__', 'tsai/tslearner.py')},
            'tsai.tutorials': {},
            'tsai.utils': { 'tsai.utils.analyze_array': ('utils.html#analyze_array', 'tsai/utils.py'),
                            'tsai.utils.analyze_feature': ('utils.html#analyze_feature', 'tsai/utils.py'),
                            'tsai.utils.apply_cmap': ('utils.html#apply_cmap', 'tsai/utils.py'),
                            'tsai.utils.array2digits': ('utils.html#array2digits', 'tsai/utils.py'),
                            'tsai.utils.assert_fn': ('utils.html#assert_fn', 'tsai/utils.py'),
                            'tsai.utils.assign_in_chunks': ('utils.html#assign_in_chunks', 'tsai/utils.py'),
                            'tsai.utils.bfill_sequence': ('utils.html#bfill_sequence', 'tsai/utils.py'),
                            'tsai.utils.bytes2str': ('utils.html#bytes2str', 'tsai/utils.py'),
                            'tsai.utils.cache_data': ('utils.html#cache_data', 'tsai/utils.py'),
                            'tsai.utils.cat2int': ('utils.html#cat2int', 'tsai/utils.py'),
                            'tsai.utils.chunks_calculator': ('utils.html#chunks_calculator', 'tsai/utils.py'),
                            'tsai.utils.clip_outliers': ('utils.html#clip_outliers', 'tsai/utils.py'),
                            'tsai.utils.cls_name': ('utils.html#cls_name', 'tsai/utils.py'),
                            'tsai.utils.concat': ('utils.html#concat', 'tsai/utils.py'),
                            'tsai.utils.create_array': ('utils.html#create_array', 'tsai/utils.py'),
                            'tsai.utils.create_dir': ('utils.html#create_dir', 'tsai/utils.py'),
                            'tsai.utils.cycle_dl': ('utils.html#cycle_dl', 'tsai/utils.py'),
                            'tsai.utils.cycle_dl_estimate': ('utils.html#cycle_dl_estimate', 'tsai/utils.py'),
                            'tsai.utils.cycle_dl_to_device': ('utils.html#cycle_dl_to_device', 'tsai/utils.py'),
                            'tsai.utils.default_dpi': ('utils.html#default_dpi', 'tsai/utils.py'),
                            'tsai.utils.delete_all_in_dir': ('utils.html#delete_all_in_dir', 'tsai/utils.py'),
                            'tsai.utils.display_pd_df': ('utils.html#display_pd_df', 'tsai/utils.py'),
                            'tsai.utils.dummify': ('utils.html#dummify', 'tsai/utils.py'),
                            'tsai.utils.encode_positions': ('utils.html#encode_positions', 'tsai/utils.py'),
                            'tsai.utils.exists': ('utils.html#exists', 'tsai/utils.py'),
                            'tsai.utils.fbfill_sequence': ('utils.html#fbfill_sequence', 'tsai/utils.py'),
                            'tsai.utils.feat2list': ('utils.html#feat2list', 'tsai/utils.py'),
                            'tsai.utils.ffill_sequence': ('utils.html#ffill_sequence', 'tsai/utils.py'),
                            'tsai.utils.fig2buf': ('utils.html#fig2buf', 'tsai/utils.py'),
                            'tsai.utils.flatten_list': ('utils.html#flatten_list', 'tsai/utils.py'),
                            'tsai.utils.get_cat_cols': ('utils.html#get_cat_cols', 'tsai/utils.py'),
                            'tsai.utils.get_cont_cols': ('utils.html#get_cont_cols', 'tsai/utils.py'),
                            'tsai.utils.get_dir_size': ('utils.html#get_dir_size', 'tsai/utils.py'),
                            'tsai.utils.get_file_size': ('utils.html#get_file_size', 'tsai/utils.py'),
                            'tsai.utils.get_func_defaults': ('utils.html#get_func_defaults', 'tsai/utils.py'),
                            'tsai.utils.get_idx_from_df_col_vals': ('utils.html#get_idx_from_df_col_vals', 'tsai/utils.py'),
                            'tsai.utils.get_idxs': ('utils.html#get_idxs', 'tsai/utils.py'),
                            'tsai.utils.get_idxs_to_keep': ('utils.html#get_idxs_to_keep', 'tsai/utils.py'),
                            'tsai.utils.get_mapping': ('utils.html#get_mapping', 'tsai/utils.py'),
                            'tsai.utils.get_outliers_IQR': ('utils.html#get_outliers_iqr', 'tsai/utils.py'),
                            'tsai.utils.get_percentile': ('utils.html#get_percentile', 'tsai/utils.py'),
                            'tsai.utils.get_plot_fig': ('utils.html#get_plot_fig', 'tsai/utils.py'),
                            'tsai.utils.get_relpath': ('utils.html#get_relpath', 'tsai/utils.py'),
                            'tsai.utils.get_robustscale_params': ('utils.html#get_robustscale_params', 'tsai/utils.py'),
                            'tsai.utils.get_size': ('utils.html#get_size', 'tsai/utils.py'),
                            'tsai.utils.get_sublist_idxs': ('utils.html#get_sublist_idxs', 'tsai/utils.py'),
                            'tsai.utils.get_subset_dict': ('utils.html#get_subset_dict', 'tsai/utils.py'),
                            'tsai.utils.ifelse': ('utils.html#ifelse', 'tsai/utils.py'),
                            'tsai.utils.int2digits': ('utils.html#int2digits', 'tsai/utils.py'),
                            'tsai.utils.is_dask': ('utils.html#is_dask', 'tsai/utils.py'),
                            'tsai.utils.is_dir': ('utils.html#is_dir', 'tsai/utils.py'),
                            'tsai.utils.is_file': ('utils.html#is_file', 'tsai/utils.py'),
                            'tsai.utils.is_memmap': ('utils.html#is_memmap', 'tsai/utils.py'),
                            'tsai.utils.is_memory_shared': ('utils.html#is_memory_shared', 'tsai/utils.py'),
                            'tsai.utils.is_not_close': ('utils.html#is_not_close', 'tsai/utils.py'),
                            'tsai.utils.is_np_view': ('utils.html#is_np_view', 'tsai/utils.py'),
                            'tsai.utils.is_nparray': ('utils.html#is_nparray', 'tsai/utils.py'),
                            'tsai.utils.is_slice': ('utils.html#is_slice', 'tsai/utils.py'),
                            'tsai.utils.is_tensor': ('utils.html#is_tensor', 'tsai/utils.py'),
                            'tsai.utils.is_tuple': ('utils.html#is_tuple', 'tsai/utils.py'),
                            'tsai.utils.is_zarr': ('utils.html#is_zarr', 'tsai/utils.py'),
                            'tsai.utils.isnone': ('utils.html#isnone', 'tsai/utils.py'),
                            'tsai.utils.itemify': ('utils.html#itemify', 'tsai/utils.py'),
                            'tsai.utils.kstest': ('utils.html#kstest', 'tsai/utils.py'),
                            'tsai.utils.linear_encoding': ('utils.html#linear_encoding', 'tsai/utils.py'),
                            'tsai.utils.load_object': ('utils.html#load_object', 'tsai/utils.py'),
                            'tsai.utils.log_tfm': ('utils.html#log_tfm', 'tsai/utils.py'),
                            'tsai.utils.map_array': ('utils.html#map_array', 'tsai/utils.py'),
                            'tsai.utils.match_seq_len': ('utils.html#match_seq_len', 'tsai/utils.py'),
                            'tsai.utils.mpl_trend': ('utils.html#mpl_trend', 'tsai/utils.py'),
                            'tsai.utils.named_partial': ('utils.html#named_partial', 'tsai/utils.py'),
                            'tsai.utils.named_partial.__call__': ('utils.html#named_partial.__call__', 'tsai/utils.py'),
                            'tsai.utils.named_partial.__init__': ('utils.html#named_partial.__init__', 'tsai/utils.py'),
                            'tsai.utils.named_partial.__repr__': ('utils.html#named_partial.__repr__', 'tsai/utils.py'),
                            'tsai.utils.np2memmap': ('utils.html#np2memmap', 'tsai/utils.py'),
                            'tsai.utils.np_load_compressed': ('utils.html#np_load_compressed', 'tsai/utils.py'),
                            'tsai.utils.np_save_compressed': ('utils.html#np_save_compressed', 'tsai/utils.py'),
                            'tsai.utils.npsave': ('utils.html#npsave', 'tsai/utils.py'),
                            'tsai.utils.pad_sequences': ('utils.html#pad_sequences', 'tsai/utils.py'),
                            'tsai.utils.pcc': ('utils.html#pcc', 'tsai/utils.py'),
                            'tsai.utils.pcorr': ('utils.html#pcorr', 'tsai/utils.py'),
                            'tsai.utils.permute_2D': ('utils.html#permute_2d', 'tsai/utils.py'),
                            'tsai.utils.plot_feature_dist': ('utils.html#plot_feature_dist', 'tsai/utils.py'),
                            'tsai.utils.plot_scatter': ('utils.html#plot_scatter', 'tsai/utils.py'),
                            'tsai.utils.random_choice': ('utils.html#random_choice', 'tsai/utils.py'),
                            'tsai.utils.random_half_normal': ('utils.html#random_half_normal', 'tsai/utils.py'),
                            'tsai.utils.random_half_normal_tensor': ('utils.html#random_half_normal_tensor', 'tsai/utils.py'),
                            'tsai.utils.random_normal': ('utils.html#random_normal', 'tsai/utils.py'),
                            'tsai.utils.random_normal_tensor': ('utils.html#random_normal_tensor', 'tsai/utils.py'),
                            'tsai.utils.random_roll2d': ('utils.html#random_roll2d', 'tsai/utils.py'),
                            'tsai.utils.random_roll3d': ('utils.html#random_roll3d', 'tsai/utils.py'),
                            'tsai.utils.random_shuffle': ('utils.html#random_shuffle', 'tsai/utils.py'),
                            'tsai.utils.reduce_memory_usage': ('utils.html#reduce_memory_usage', 'tsai/utils.py'),
                            'tsai.utils.remove_dir': ('utils.html#remove_dir', 'tsai/utils.py'),
                            'tsai.utils.remove_fn': ('utils.html#remove_fn', 'tsai/utils.py'),
                            'tsai.utils.reverse_dict': ('utils.html#reverse_dict', 'tsai/utils.py'),
                            'tsai.utils.roll2d': ('utils.html#roll2d', 'tsai/utils.py'),
                            'tsai.utils.roll3d': ('utils.html#roll3d', 'tsai/utils.py'),
                            'tsai.utils.rolling_moving_average': ('utils.html#rolling_moving_average', 'tsai/utils.py'),
                            'tsai.utils.rotate_axis0': ('utils.html#rotate_axis0', 'tsai/utils.py'),
                            'tsai.utils.rotate_axis1': ('utils.html#rotate_axis1', 'tsai/utils.py'),
                            'tsai.utils.rotate_axis2': ('utils.html#rotate_axis2', 'tsai/utils.py'),
                            'tsai.utils.save_object': ('utils.html#save_object', 'tsai/utils.py'),
                            'tsai.utils.scc': ('utils.html#scc', 'tsai/utils.py'),
                            'tsai.utils.scorr': ('utils.html#scorr', 'tsai/utils.py'),
                            'tsai.utils.shuffle_along_axis': ('utils.html#shuffle_along_axis', 'tsai/utils.py'),
                            'tsai.utils.sincos_encoding': ('utils.html#sincos_encoding', 'tsai/utils.py'),
                            'tsai.utils.smallest_dtype': ('utils.html#smallest_dtype', 'tsai/utils.py'),
                            'tsai.utils.sort_generator': ('utils.html#sort_generator', 'tsai/utils.py'),
                            'tsai.utils.split_in_chunks': ('utils.html#split_in_chunks', 'tsai/utils.py'),
                            'tsai.utils.stack': ('utils.html#stack', 'tsai/utils.py'),
                            'tsai.utils.stack_pad': ('utils.html#stack_pad', 'tsai/utils.py'),
                            'tsai.utils.str2index': ('utils.html#str2index', 'tsai/utils.py'),
                            'tsai.utils.str2list': ('utils.html#str2list', 'tsai/utils.py'),
                            'tsai.utils.test_eq_nan': ('utils.html#test_eq_nan', 'tsai/utils.py'),
                            'tsai.utils.test_error': ('utils.html#test_error', 'tsai/utils.py'),
                            'tsai.utils.test_ge': ('utils.html#test_ge', 'tsai/utils.py'),
                            'tsai.utils.test_gt': ('utils.html#test_gt', 'tsai/utils.py'),
                            'tsai.utils.test_le': ('utils.html#test_le', 'tsai/utils.py'),
                            'tsai.utils.test_lt': ('utils.html#test_lt', 'tsai/utils.py'),
                            'tsai.utils.test_not_close': ('utils.html#test_not_close', 'tsai/utils.py'),
                            'tsai.utils.test_not_ok': ('utils.html#test_not_ok', 'tsai/utils.py'),
                            'tsai.utils.test_ok': ('utils.html#test_ok', 'tsai/utils.py'),
                            'tsai.utils.test_type': ('utils.html#test_type', 'tsai/utils.py'),
                            'tsai.utils.to1d': ('utils.html#to1d', 'tsai/utils.py'),
                            'tsai.utils.to1darray': ('utils.html#to1darray', 'tsai/utils.py'),
                            'tsai.utils.to1dtensor': ('utils.html#to1dtensor', 'tsai/utils.py'),
                            'tsai.utils.to2d': ('utils.html#to2d', 'tsai/utils.py'),
                            'tsai.utils.to2dPlus': ('utils.html#to2dplus', 'tsai/utils.py'),
                            'tsai.utils.to2dPlusArray': ('utils.html#to2dplusarray', 'tsai/utils.py'),
                            'tsai.utils.to2dPlusTensor': ('utils.html#to2dplustensor', 'tsai/utils.py'),
                            'tsai.utils.to2darray': ('utils.html#to2darray', 'tsai/utils.py'),
                            'tsai.utils.to2dtensor': ('utils.html#to2dtensor', 'tsai/utils.py'),
                            'tsai.utils.to3d': ('utils.html#to3d', 'tsai/utils.py'),
                            'tsai.utils.to3dPlus': ('utils.html#to3dplus', 'tsai/utils.py'),
                            'tsai.utils.to3dPlusArray': ('utils.html#to3dplusarray', 'tsai/utils.py'),
                            'tsai.utils.to3dPlusTensor': ('utils.html#to3dplustensor', 'tsai/utils.py'),
                            'tsai.utils.to3darray': ('utils.html#to3darray', 'tsai/utils.py'),
                            'tsai.utils.to3dtensor': ('utils.html#to3dtensor', 'tsai/utils.py'),
                            'tsai.utils.toL': ('utils.html#tol', 'tsai/utils.py'),
                            'tsai.utils.to_sincos_time': ('utils.html#to_sincos_time', 'tsai/utils.py'),
                            'tsai.utils.to_tsfresh_df': ('utils.html#to_tsfresh_df', 'tsai/utils.py'),
                            'tsai.utils.toarray': ('utils.html#toarray', 'tsai/utils.py'),
                            'tsai.utils.todtype': ('utils.html#todtype', 'tsai/utils.py'),
                            'tsai.utils.torch_clamp': ('utils.html#torch_clamp', 'tsai/utils.py'),
                            'tsai.utils.torch_diff': ('utils.html#torch_diff', 'tsai/utils.py'),
                            'tsai.utils.torch_flip': ('utils.html#torch_flip', 'tsai/utils.py'),
                            'tsai.utils.torch_masked_to_num': ('utils.html#torch_masked_to_num', 'tsai/utils.py'),
                            'tsai.utils.torch_mean_groupby': ('utils.html#torch_mean_groupby', 'tsai/utils.py'),
                            'tsai.utils.torch_nan_to_num': ('utils.html#torch_nan_to_num', 'tsai/utils.py'),
                            'tsai.utils.torch_nanmean': ('utils.html#torch_nanmean', 'tsai/utils.py'),
                            'tsai.utils.torch_nanstd': ('utils.html#torch_nanstd', 'tsai/utils.py'),
                            'tsai.utils.torch_slice_by_dim': ('utils.html#torch_slice_by_dim', 'tsai/utils.py'),
                            'tsai.utils.torch_tile': ('utils.html#torch_tile', 'tsai/utils.py'),
                            'tsai.utils.totensor': ('utils.html#totensor', 'tsai/utils.py'),
                            'tsai.utils.tscore': ('utils.html#tscore', 'tsai/utils.py'),
                            'tsai.utils.ttest': ('utils.html#ttest', 'tsai/utils.py'),
                            'tsai.utils.yaml2dict': ('utils.html#yaml2dict', 'tsai/utils.py'),
                            'tsai.utils.zerofy': ('utils.html#zerofy', 'tsai/utils.py')},
            'tsai.wandb': {'tsai.wandb.wandb_agent': ('wandb.html#wandb_agent', 'tsai/wandb.py')}}}
